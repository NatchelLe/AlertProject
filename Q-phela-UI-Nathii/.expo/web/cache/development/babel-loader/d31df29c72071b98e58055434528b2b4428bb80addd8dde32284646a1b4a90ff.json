{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Colors } from \"../assets/Colors\";\nimport InputComponent from \"../components/global/InputComponent\";\nimport RoundedButton from \"../components/global/RoundedButton\";\nimport Image from \"../components/login-screen/Image\";\nimport axios from 'axios';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  var LoginFunction = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var loginData = {\n          email: email,\n          password: password\n        };\n        console.log(loginData);\n        var response = yield axios.post('http://localhost:3002/login', loginData);\n        console.log('Server response:', response.data);\n        if (response.data.success) {\n          if (response.data.role === 'citizen') {\n            localStorage.setItem(\"citizen_id\", response.data.results[0].citizen_id.toString());\n            localStorage.setItem(\"citizen_name\", response.data.results[0].citizen_name.toString());\n            console.log('Logged in as citizen');\n            navigation.navigate('TipsPage');\n          } else if (response.data.role === 'admin') {\n            console.log('Logged in as admin');\n            navigation.navigate('AdminDashboard');\n          }\n        } else {\n          console.error('Login failed:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Login failed:', error);\n      }\n    });\n    return function LoginFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsxs(View, {\n      style: styles.viewStyle,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 41\n        },\n        children: _jsx(Image, {})\n      }), _jsxs(View, {\n        style: [styles.viewStyle, {\n          gap: 30\n        }],\n        children: [_jsx(TextInput, {\n          placeholder: \"email\",\n          mode: \"text\",\n          onChangeText: function onChangeText(e) {\n            return setEmail(e);\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          mode: \"text\",\n          secure: true,\n          onChangeText: function onChangeText(e) {\n            return setPassword(e);\n          }\n        }), _jsx(RoundedButton, {\n          btnColor: Colors.black,\n          title: \"Login\",\n          onPressedFun: LoginFunction\n        }), _jsxs(View, {\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate(\"Register\");\n              },\n              children: _jsx(Text, {\n                style: [styles.text, {\n                  color: Colors.blue\n                }],\n                children: \"Register\"\n              })\n            }), _jsx(Text, {\n              style: [styles.text],\n              children: \" your account\"\n            })]\n          }), _jsx(Pressable, {\n            style: {\n              marginTop: 5\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"ForgotPassword\");\n            },\n            children: _jsx(Text, {\n              style: [styles.text, {\n                color: Colors.blue,\n                textAlign: \"center\"\n              }],\n              children: \"forgot password\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: Colors.gray\n  },\n  viewStyle: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: \"400\"\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","SafeAreaView","Text","Pressable","TextInput","Colors","InputComponent","RoundedButton","Image","axios","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigation","LoginFunction","_ref","_asyncToGenerator","loginData","console","log","response","post","data","success","role","localStorage","setItem","results","citizen_id","toString","citizen_name","navigate","error","message","apply","arguments","style","styles","root","children","viewStyle","marginBottom","gap","placeholder","mode","onChangeText","e","secure","btnColor","black","title","onPressedFun","flexDirection","onPress","text","color","blue","marginTop","textAlign","create","flex","alignItems","justifyContent","backgroundColor","gray","width","fontSize","fontWeight"],"sources":["D:/Q-phela-UI/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, SafeAreaView, Text, Pressable, TextInput } from\r\n\"react-native\";\r\nimport { Colors } from \"../assets/Colors\";\r\nimport InputComponent from \"../components/global/InputComponent\";\r\nimport RoundedButton from \"../components/global/RoundedButton\";\r\nimport Image from \"../components/login-screen/Image\";\r\nimport axios from 'axios'; // Import Axios\r\nimport { useNavigation } from \"@react-navigation/native\"; // Import the\r\n//navigation hook\r\nexport default function LoginScreen() {\r\nconst [email, setEmail] = useState(\"\");\r\nconst [password, setPassword] = useState(\"\");\r\nconst navigation = useNavigation(); // Use the navigation hook\r\nconst LoginFunction = async () => {\r\ntry {\r\n// Create an object with the login data\r\nconst loginData = {\r\nemail: email,\r\npassword: password,\r\n};\r\nconsole.log(loginData);\r\n// Make a POST request to your server's login endpoint\r\nconst response = await\r\naxios.post('http://localhost:3002/login',loginData);\r\nconsole.log('Server response:', response.data);\r\n\r\nif (response.data.success) {\r\nif (response.data.role === 'citizen') {\r\n// Redirect to Citizen Dashboard\r\n   // Handle the server response here\r\n \r\n \r\n     localStorage.setItem(\"citizen_id\",response.data.results[0].citizen_id.toString())\r\n     localStorage.setItem(\"citizen_name\",  response.data.results[0].citizen_name.toString())\r\nconsole.log('Logged in as citizen');\r\nnavigation.navigate('TipsPage');\r\n} else if (response.data.role === 'admin') {\r\n// Redirect to Admin Dashboard\r\nconsole.log('Logged in as admin');\r\n// Navigate to the appropriate admin screen\r\nnavigation.navigate('AdminDashboard');\r\n}\r\n} else {\r\nconsole.error('Login failed:', response.data.message);\r\n}\r\n} catch (error) {\r\n// Handle login errors (e.g., incorrect username or password)\r\nconsole.error('Login failed:', error);\r\n}\r\n};\r\nreturn (\r\n<SafeAreaView style={styles.root}>\r\n<View style={styles.viewStyle}>\r\n<View style={{ marginBottom: 41 }}>\r\n<Image />\r\n</View>\r\n<View style={[styles.viewStyle, { gap: 30 }]}>\r\n<TextInput\r\nplaceholder=\"email\"\r\nmode=\"text\"\r\nonChangeText={(e)=> setEmail(e)}\r\n/>\r\n<TextInput\r\nplaceholder=\"Password\"\r\nmode=\"text\"\r\nsecure={true}\r\nonChangeText={(e)=> setPassword(e)}\r\n/>\r\n<RoundedButton\r\nbtnColor={Colors.black}\r\ntitle=\"Login\"\r\nonPressedFun={LoginFunction}\r\n/>\r\n<View>\r\n<View style={{ flexDirection: \"row\" }}>\r\n<Pressable onPress={() => navigation.navigate(\"Register\")}>\r\n<Text style={[styles.text, { color: Colors.blue }]}>\r\nRegister\r\n</Text>\r\n</Pressable>\r\n<Text style={[styles.text]}> your account</Text>\r\n</View>\r\n<Pressable\r\nstyle={{ marginTop: 5 }}\r\nonPress={() => navigation.navigate(\"ForgotPassword\")}\r\n>\r\n<Text\r\nstyle={[\r\nstyles.text,\r\n{ color: Colors.blue, textAlign: \"center\" },\r\n]}\r\n>\r\nforgot password\r\n</Text>\r\n</Pressable>\r\n</View>\r\n</View>\r\n</View>\r\n</SafeAreaView>\r\n);\r\n}\r\nconst styles = StyleSheet.create({\r\nroot: {\r\nflex: 1,\r\nalignItems: \"center\",\r\njustifyContent: \"center\",\r\nbackgroundColor: Colors.gray,\r\n},\r\nviewStyle: {\r\nwidth: \"100%\",\r\njustifyContent: \"center\",\r\nalignItems: \"center\",\r\n},\r\ntext: {\r\nfontSize: 14,\r\nfontWeight: \"400\",\r\n},\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}