{"ast":null,"code":"import { useNavigation } from \"@react-navigation/native\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Colors } from \"../assets/Colors\";\nimport InputComponent from \"../components/global/InputComponent\";\nimport RoundedButton from \"../components/global/RoundedButton\";\nimport Image from \"../components/login-screen/Image\";\nimport { Formik } from \"formik\";\nimport { loginValidationSchema } from \"../assets/constants/Schemas\";\nimport axios from \"axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { BASE_URL } from \"../assets/constants/ConstantData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var navigation = useNavigation();\n  var loginFunction = function loginFunction(values) {\n    axios.post(`${BASE_URL}:3002/login/`, {\n      email: values.username,\n      password: values.password\n    }).then(function (res) {\n      console.log(res.data.results[0].citizen_id);\n      console.log(res.data.results[0].citizen_name);\n      if (res.data.success) {\n        AsyncStorage.setItem('citizen_id', res.data.results[0].citizen_id);\n        AsyncStorage.setItem('citizen_name', res.data.results[0].citizen_name);\n        navigation.navigate('TipsPage');\n      }\n    }).catch(function (er) {\n      console.log(er);\n    });\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsxs(View, {\n      style: styles.viewStyle,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 41\n        },\n        children: _jsx(Image, {})\n      }), _jsxs(View, {\n        style: [styles.viewStyle, {\n          gap: 30\n        }],\n        children: [_jsx(Formik, {\n          validationSchema: loginValidationSchema,\n          initialValues: {\n            username: \"\",\n            password: \"\"\n          },\n          onSubmit: function onSubmit(values) {\n            return loginFunction(values);\n          },\n          children: function children(_ref) {\n            var values = _ref.values,\n              handleChange = _ref.handleChange,\n              isValid = _ref.isValid,\n              errors = _ref.errors,\n              handleBlur = _ref.handleBlur,\n              handleSubmit = _ref.handleSubmit;\n            return _jsxs(_Fragment, {\n              children: [_jsx(InputComponent, {\n                name: \"username\",\n                onChangeText: handleChange(\"username\"),\n                onBlur: handleBlur(\"username\"),\n                value: values.username,\n                placeholder: \"Username\",\n                mode: \"text\",\n                errors: errors.username\n              }), _jsx(InputComponent, {\n                name: \"password\",\n                errors: errors.password,\n                placeholder: \"Password\",\n                mode: \"text\",\n                secure: true,\n                onChangeText: handleChange(\"password\"),\n                onBlur: handleBlur(\"password\"),\n                value: values.password\n              }), _jsx(RoundedButton, {\n                btnColor: Colors.black,\n                title: \"Login\",\n                isDisabled: isValid,\n                onPressedFun: handleSubmit\n              })]\n            });\n          }\n        }), _jsxs(View, {\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate(\"Register\");\n              },\n              children: _jsx(Text, {\n                style: [styles.text, {\n                  color: Colors.blue,\n                  fontWeight: \"bold\"\n                }],\n                children: \"Register\"\n              })\n            }), _jsx(Text, {\n              style: [styles.text],\n              children: \" your account\"\n            })]\n          }), _jsx(Pressable, {\n            style: {\n              marginTop: 5\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"ForgotPassword\");\n            },\n            children: _jsx(Text, {\n              style: [styles.text, {\n                color: Colors.blue,\n                textAlign: \"center\"\n              }],\n              children: \"forgot password\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: Colors.gray\n  },\n  viewStyle: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: \"400\"\n  }\n});","map":{"version":3,"names":["useNavigation","React","View","StyleSheet","SafeAreaView","Pressable","Text","Colors","InputComponent","RoundedButton","Image","Formik","loginValidationSchema","axios","AsyncStorage","BASE_URL","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","LoginScreen","navigation","loginFunction","values","post","email","username","password","then","res","console","log","data","results","citizen_id","citizen_name","success","setItem","navigate","catch","er","style","styles","root","children","viewStyle","marginBottom","gap","validationSchema","initialValues","onSubmit","_ref","handleChange","isValid","errors","handleBlur","handleSubmit","name","onChangeText","onBlur","value","placeholder","mode","secure","btnColor","black","title","isDisabled","onPressedFun","flexDirection","onPress","text","color","blue","fontWeight","marginTop","textAlign","create","flex","alignItems","justifyContent","backgroundColor","gray","width","fontSize"],"sources":["D:/Q-phela-UI-Nathii/Q-phela-UI-Nathii/src/screens/LoginScreen.js"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport React from \"react\";\r\nimport { View, StyleSheet, SafeAreaView, Pressable, Text } from \"react-native\";\r\nimport { Colors } from \"../assets/Colors\";\r\nimport InputComponent from \"../components/global/InputComponent\";\r\nimport RoundedButton from \"../components/global/RoundedButton\";\r\nimport Image from \"../components/login-screen/Image\";\r\nimport { Formik } from \"formik\";\r\nimport { loginValidationSchema } from \"../assets/constants/Schemas\";\r\nimport axios from \"axios\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { BASE_URL } from \"../assets/constants/ConstantData\";\r\n\r\nexport default function LoginScreen() {\r\n  const navigation = useNavigation();\r\n\r\n  const loginFunction = values => {\r\n    axios\r\n    .post(`${BASE_URL}:3002/login/`, { email: values.username, password: values.password })\r\n    .then((res) => {\r\n      console.log(res.data.results[0].citizen_id)  \r\n      console.log(res.data.results[0].citizen_name)  \r\n      \r\n      if(res.data.success){\r\n        AsyncStorage.setItem('citizen_id', res.data.results[0].citizen_id);\r\n        AsyncStorage.setItem('citizen_name', res.data.results[0].citizen_name)\r\n        navigation.navigate('TipsPage');\r\n      }\r\n    \r\n    })\r\n    .catch((er) => {\r\n      console.log(er);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.root}>\r\n      <View style={styles.viewStyle}>\r\n        <View style={{ marginBottom: 41 }}>\r\n          <Image />\r\n        </View>\r\n        <View style={[styles.viewStyle, { gap: 30 }]}>\r\n          <Formik\r\n            validationSchema={loginValidationSchema}\r\n            initialValues={{ username: \"\", password: \"\" }}\r\n            onSubmit={(values) => \r\n              loginFunction(values)\r\n            }\r\n          >\r\n            {({\r\n              values,\r\n              handleChange,\r\n              isValid,\r\n              errors,\r\n              handleBlur,\r\n              handleSubmit,\r\n            }) => (\r\n              <>\r\n                <InputComponent\r\n                  name=\"username\"\r\n                  onChangeText={handleChange(\"username\")}\r\n                  onBlur={handleBlur(\"username\")}\r\n                  value={values.username}\r\n                  placeholder=\"Username\"\r\n                  mode=\"text\"\r\n                  errors={errors.username}\r\n                />\r\n\r\n                <InputComponent\r\n                  name=\"password\"\r\n                  errors={errors.password}\r\n                  placeholder=\"Password\"\r\n                  mode=\"text\"\r\n                  secure={true}\r\n                  onChangeText={handleChange(\"password\")}\r\n                  onBlur={handleBlur(\"password\")}\r\n                  value={values.password}\r\n                />\r\n                <RoundedButton\r\n                  btnColor={Colors.black}\r\n                  title=\"Login\"\r\n                  isDisabled={isValid}\r\n                  onPressedFun={handleSubmit}\r\n                />\r\n              </>\r\n            )}\r\n          </Formik>\r\n          <View>\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              <Pressable onPress={() => navigation.navigate(\"Register\")}>\r\n                <Text\r\n                  style={[\r\n                    styles.text,\r\n                    { color: Colors.blue, fontWeight: \"bold\" },\r\n                  ]}\r\n                >\r\n                  Register\r\n                </Text>\r\n              </Pressable>\r\n              <Text style={[styles.text]}> your account</Text>\r\n            </View>\r\n            <Pressable\r\n              style={{ marginTop: 5 }}\r\n              onPress={() => navigation.navigate(\"ForgotPassword\")}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.text,\r\n                  { color: Colors.blue, textAlign: \"center\" },\r\n                ]}\r\n              >\r\n                forgot password\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: Colors.gray,\r\n  },\r\n  viewStyle: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}