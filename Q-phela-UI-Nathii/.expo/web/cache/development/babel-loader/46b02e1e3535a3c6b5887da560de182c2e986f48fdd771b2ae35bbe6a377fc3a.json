{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImagePicker from 'react-native-image-crop-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileImage = function ProfileImage() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageSource = _useState2[0],\n    setImageSource = _useState2[1];\n  var selectImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var image = yield ImagePicker.openPicker({\n          width: 150,\n          height: 150,\n          cropping: true,\n          cropperCircleOverlay: true,\n          compressImageQuality: 0.7\n        });\n        setImageSource({\n          uri: image.path\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function selectImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      alignItems: 'center'\n    },\n    children: [imageSource && _jsx(Image, {\n      source: imageSource,\n      style: {\n        width: 150,\n        height: 150,\n        borderRadius: 75\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: selectImage,\n      style: {\n        marginTop: 20\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 24,\n          color: 'blue'\n        },\n        children: \"Select Image\"\n      })\n    })]\n  });\n};\nexport default ProfileImage;","map":{"version":3,"names":["React","useState","View","Image","TouchableOpacity","Text","ImagePicker","jsx","_jsx","jsxs","_jsxs","ProfileImage","_useState","_useState2","_slicedToArray","imageSource","setImageSource","selectImage","_ref","_asyncToGenerator","image","openPicker","width","height","cropping","cropperCircleOverlay","compressImageQuality","uri","path","error","console","log","apply","arguments","style","alignItems","children","source","borderRadius","onPress","marginTop","fontSize","color"],"sources":["D:/My Documents/Q-phela-UI-Nathii (3)/Q-phela-UI-Nathii (2)/Q-phela-UI-Nathii/Q-phela-UI-Nathii/src/screens/ProfileImage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Image, TouchableOpacity, Text } from 'react-native';\r\nimport ImagePicker from 'react-native-image-crop-picker';\r\n\r\nconst ProfileImage = () => {\r\n  const [imageSource, setImageSource] = useState(null);\r\n\r\n  const selectImage = async () => {\r\n    try {\r\n      const image = await ImagePicker.openPicker({\r\n        width: 150,\r\n        height: 150,\r\n        cropping: true,\r\n        cropperCircleOverlay: true,\r\n        compressImageQuality: 0.7,\r\n      });\r\n      \r\n      setImageSource({ uri: image.path });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ alignItems: 'center' }}>\r\n      {imageSource && <Image source={imageSource} style={{ width: 150, height: 150, borderRadius: 75 }} />}\r\n      <TouchableOpacity onPress={selectImage} style={{ marginTop: 20 }}>\r\n        <Text style={{ fontSize: 24, color: 'blue' }}>Select Image</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ProfileImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAExC,OAAOC,WAAW,MAAM,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAsCX,QAAQ,CAAC,IAAI,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElC,IAAMI,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,KAAK,SAASd,WAAW,CAACe,UAAU,CAAC;UACzCC,KAAK,EAAE,GAAG;UACVC,MAAM,EAAE,GAAG;UACXC,QAAQ,EAAE,IAAI;UACdC,oBAAoB,EAAE,IAAI;UAC1BC,oBAAoB,EAAE;QACxB,CAAC,CAAC;QAEFV,cAAc,CAAC;UAAEW,GAAG,EAAEP,KAAK,CAACQ;QAAK,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAAA,gBAdKZ,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GAchB;EAED,OACEvB,KAAA,CAACR,IAAI;IAACgC,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,GACnCrB,WAAW,IAAIP,IAAA,CAACL,KAAK;MAACkC,MAAM,EAAEtB,WAAY;MAACmB,KAAK,EAAE;QAAEZ,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEe,YAAY,EAAE;MAAG;IAAE,CAAE,CAAC,EACpG9B,IAAA,CAACJ,gBAAgB;MAACmC,OAAO,EAAEtB,WAAY;MAACiB,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAG,CAAE;MAAAJ,QAAA,EAC/D5B,IAAA,CAACH,IAAI;QAAC6B,KAAK,EAAE;UAAEO,QAAQ,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAN,QAAA,EAAC;MAAY,CAAM;IAAC,CACjD,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,eAAezB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}