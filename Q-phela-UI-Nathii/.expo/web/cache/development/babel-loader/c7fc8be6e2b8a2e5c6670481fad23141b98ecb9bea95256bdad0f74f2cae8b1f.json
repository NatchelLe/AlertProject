{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar IncidentReportForm = function IncidentReportForm() {\n  var _useState = useState({\n      date: '',\n      location: '',\n      incidentType: '',\n      description: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    incident = _useState2[0],\n    setIncident = _useState2[1];\n  var locations = ['Location 1', 'Location 2', 'Location 3'];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    suggestions = _useState4[0],\n    setSuggestions = _useState4[1];\n  var getSuggestions = function getSuggestions(value) {\n    var inputValue = value.trim().toLowerCase();\n    var inputLength = inputValue.length;\n    return inputLength === 0 ? [] : locations.filter(function (loc) {\n      return loc.toLowerCase().slice(0, inputLength) === inputValue;\n    });\n  };\n  var onLocationChange = function onLocationChange(event, _ref) {\n    var newValue = _ref.newValue;\n    setIncident(_objectSpread(_objectSpread({}, incident), {}, {\n      location: newValue\n    }));\n  };\n  var onSuggestionsFetchRequested = function onSuggestionsFetchRequested(_ref2) {\n    var value = _ref2.value;\n    setSuggestions(getSuggestions(value));\n  };\n  var onSuggestionsClearRequested = function onSuggestionsClearRequested() {\n    setSuggestions([]);\n  };\n  var inputProps = {\n    placeholder: 'Location',\n    value: incident.location,\n    onChange: onLocationChange\n  };\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log('Incident data:', incident);\n    setIncident({\n      date: '',\n      location: '',\n      incidentType: '',\n      description: ''\n    });\n  };\n  return _jsxs(\"div\", {\n    className: \"container\",\n    children: [_jsx(\"h2\", {\n      children: \"Incident Reporting Form\"\n    }), _jsxs(\"form\", {\n      onSubmit: handleSubmit,\n      children: [_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [_jsx(\"label\", {\n          children: \"Date:\"\n        }), _jsx(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: incident.date,\n          onChange: handleChange\n        })]\n      }), _jsxs(\"div\", {\n        className: \"form-group\",\n        children: [_jsx(\"label\", {\n          children: \"Location:\"\n        }), _jsx(Autosuggest, {\n          suggestions: suggestions,\n          onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n          onSuggestionsClearRequested: onSuggestionsClearRequested,\n          getSuggestionValue: function getSuggestionValue(suggestion) {\n            return suggestion;\n          },\n          renderSuggestion: function renderSuggestion(suggestion) {\n            return _jsx(\"div\", {\n              children: suggestion\n            });\n          },\n          inputProps: inputProps\n        })]\n      }), _jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn mt-3\",\n        children: \"Submit\"\n      })]\n    })]\n  });\n};\nexport default IncidentReportForm;","map":{"version":3,"names":["React","useState","Autosuggest","jsx","_jsx","jsxs","_jsxs","IncidentReportForm","_useState","date","location","incidentType","description","_useState2","_slicedToArray","incident","setIncident","locations","_useState3","_useState4","suggestions","setSuggestions","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","loc","slice","onLocationChange","event","_ref","newValue","_objectSpread","onSuggestionsFetchRequested","_ref2","onSuggestionsClearRequested","inputProps","placeholder","onChange","handleSubmit","e","preventDefault","console","log","className","children","onSubmit","type","name","handleChange","getSuggestionValue","suggestion","renderSuggestion"],"sources":["D:/Q-phela-UI/src/screens/IncidentReportForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nconst IncidentReportForm = () => {\r\n  const [incident, setIncident] = useState({\r\n    date: '',\r\n    location: '',\r\n    incidentType: '',\r\n    description: '',\r\n  });\r\n\r\n  // Suggestions for autocomplete\r\n  const locations = [\r\n    'Location 1',\r\n    'Location 2',\r\n    'Location 3',\r\n    // Add more locations as needed\r\n  ];\r\n\r\n  // Autosuggest state\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  // Teach Autosuggest how to calculate suggestions for any given input value.\r\n  const getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : locations.filter(\r\n          (loc) => loc.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n  };\r\n\r\n  // When input value changes\r\n  const onLocationChange = (event, { newValue }) => {\r\n    setIncident({\r\n      ...incident,\r\n      location: newValue,\r\n    });\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to update suggestions.\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to clear suggestions.\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  // Input properties for Autosuggest\r\n  const inputProps = {\r\n    placeholder: 'Location',\r\n    value: incident.location,\r\n    onChange: onLocationChange,\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission (e.g., send data to a server, save to a database)\r\n    console.log('Incident data:', incident);\r\n    // Clear the form fields after submission\r\n    setIncident({\r\n      date: '',\r\n      location: '',\r\n      incidentType: '',\r\n      description: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Your existing CSS styles */}\r\n      {/* ... */}\r\n      <h2>Incident Reporting Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={incident.date}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Location:</label>\r\n          <Autosuggest\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={inputProps}\r\n          />\r\n        </div>\r\n        {/* ... Other form fields */}\r\n        <button type=\"submit\" className=\"btn mt-3\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncidentReportForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}