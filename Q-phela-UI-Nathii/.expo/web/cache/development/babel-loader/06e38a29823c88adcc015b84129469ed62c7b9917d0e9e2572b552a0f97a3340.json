{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar IncidentReportForm = function IncidentReportForm() {\n  var _useState = useState({\n      date: '',\n      location: '',\n      incidentType: '',\n      description: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    incident = _useState2[0],\n    setIncident = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredLocations = _useState4[0],\n    setFilteredLocations = _useState4[1];\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n      name = _e$target.name,\n      value = _e$target.value;\n    setIncident(_objectSpread(_objectSpread({}, incident), {}, _defineProperty({}, name, value)));\n    filterLocations(value);\n  };\n  var filterLocations = function filterLocations(searchTerm) {\n    var filteredLocations = yourFilterFunction(searchTerm);\n    setFilteredLocations(filteredLocations);\n  };\n  var handleLocationClick = function handleLocationClick(location) {\n    setIncident(_objectSpread(_objectSpread({}, incident), {}, {\n      location: location\n    }));\n    setFilteredLocations([]);\n  };\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log('Incident data:', incident);\n    setIncident({\n      date: '',\n      location: '',\n      incidentType: '',\n      description: ''\n    });\n  };\n  var styles = `\n    .container {\n      max-width: 400px;\n      margin: 0 auto;\n      padding: 20px;\n      border: 1px solid #ccc;\n      border-radius: 5px;\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n    }\n\n    h2 {\n      text-align: center;\n    }\n\n    .form-group {\n      margin-bottom: 20px;\n    }\n\n    label {\n      display: block;\n      font-weight: bold;\n    }\n\n    input, select, textarea {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n    }\n\n    select {\n      height: 36px;\n    }\n\n    textarea {\n      height: 100px;\n    }\n\n    .btn {\n      display: block;\n      width: 100%;\n      padding: 10px;\n      background-color: #007bff;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n\n    .btn:hover {\n      background-color: #0056b3;\n    }\n\n    /* Suggestions styles */\n    .suggestions {\n      list-style: none;\n      padding: 0;\n      margin: 0;\n      border: 1px solid #ccc;\n      border-top: none;\n      position: absolute;\n      background-color: #fff;\n      max-height: 150px;\n      overflow-y: scroll;\n    }\n\n    .suggestions li {\n      padding: 8px;\n      cursor: pointer;\n    }\n\n    .suggestions li:hover {\n      background-color: #f0f0f0;\n    }\n  `;\n  return _jsxs(\"div\", {\n    className: \"container\",\n    children: [_jsx(\"style\", {\n      children: styles\n    }), _jsx(\"h2\", {\n      children: \"Incident Reporting Form\"\n    }), _jsxs(\"form\", {\n      onSubmit: handleSubmit,\n      children: [_jsxs(\"div\", {\n        className: \"form-group\",\n        children: [_jsx(\"label\", {\n          children: \"Date:\"\n        }), _jsx(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: incident.date,\n          onChange: handleChange\n        })]\n      }), _jsxs(\"div\", {\n        className: \"form-group\",\n        children: [_jsx(\"label\", {\n          children: \"Location:\"\n        }), _jsx(\"input\", {\n          type: \"text\",\n          name: \"location\",\n          value: incident.location,\n          onChange: handleChange\n        }), filteredLocations.length > 0 && _jsx(\"ul\", {\n          className: \"suggestions\",\n          children: filteredLocations.map(function (location, index) {\n            return _jsx(\"li\", {\n              onClick: function onClick() {\n                return handleLocationClick(location);\n              },\n              children: location\n            }, index);\n          })\n        })]\n      }), _jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn mt-3\",\n        children: \"Submit\"\n      })]\n    })]\n  });\n};\nexport default IncidentReportForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","IncidentReportForm","_useState","date","location","incidentType","description","_useState2","_slicedToArray","incident","setIncident","_useState3","_useState4","filteredLocations","setFilteredLocations","handleChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","filterLocations","searchTerm","yourFilterFunction","handleLocationClick","handleSubmit","preventDefault","console","log","styles","className","children","onSubmit","type","onChange","length","map","index","onClick"],"sources":["D:/Q-phela-UI/src/screens/IncidentReportForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst IncidentReportForm = () => {\r\n  const [incident, setIncident] = useState({\r\n    date: '',\r\n    location: '',\r\n    incidentType: '',\r\n    description: '',\r\n  });\r\n\r\n  // Add a state to store the filtered locations\r\n  const [filteredLocations, setFilteredLocations] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setIncident({\r\n      ...incident,\r\n      [name]: value,\r\n    });\r\n\r\n    // Filter and update the suggestions based on the input value\r\n    filterLocations(value);\r\n  };\r\n\r\n  const filterLocations = (searchTerm) => {\r\n    // Replace this with your logic to fetch and filter locations\r\n    // For example, you can fetch a list of locations from an API\r\n    // and filter them based on the searchTerm\r\n    const filteredLocations = yourFilterFunction(searchTerm);\r\n\r\n    setFilteredLocations(filteredLocations);\r\n  };\r\n\r\n  const handleLocationClick = (location) => {\r\n    // Set the selected location from the suggestions\r\n    setIncident({\r\n      ...incident,\r\n      location: location,\r\n    });\r\n\r\n    // Clear the suggestions\r\n    setFilteredLocations([]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission (e.g., send data to a server, save to a database)\r\n    console.log('Incident data:', incident);\r\n    // Clear the form fields after submission\r\n    setIncident({\r\n      date: '',\r\n      location: '',\r\n      incidentType: '',\r\n      description: '',\r\n    });\r\n  };\r\n\r\n  const styles = `\r\n    .container {\r\n      max-width: 400px;\r\n      margin: 0 auto;\r\n      padding: 20px;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    h2 {\r\n      text-align: center;\r\n    }\r\n\r\n    .form-group {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    label {\r\n      display: block;\r\n      font-weight: bold;\r\n    }\r\n\r\n    input, select, textarea {\r\n      width: 100%;\r\n      padding: 8px;\r\n      border: 1px solid #ccc;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    select {\r\n      height: 36px;\r\n    }\r\n\r\n    textarea {\r\n      height: 100px;\r\n    }\r\n\r\n    .btn {\r\n      display: block;\r\n      width: 100%;\r\n      padding: 10px;\r\n      background-color: #007bff;\r\n      color: #fff;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .btn:hover {\r\n      background-color: #0056b3;\r\n    }\r\n\r\n    /* Suggestions styles */\r\n    .suggestions {\r\n      list-style: none;\r\n      padding: 0;\r\n      margin: 0;\r\n      border: 1px solid #ccc;\r\n      border-top: none;\r\n      position: absolute;\r\n      background-color: #fff;\r\n      max-height: 150px;\r\n      overflow-y: scroll;\r\n    }\r\n\r\n    .suggestions li {\r\n      padding: 8px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .suggestions li:hover {\r\n      background-color: #f0f0f0;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <style>{styles}</style>\r\n      {/* Your CSS styles */}\r\n      <h2>Incident Reporting Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={incident.date}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Location:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            value={incident.location}\r\n            onChange={handleChange}\r\n          />\r\n          {/* Display location suggestions */}\r\n          {filteredLocations.length > 0 && (\r\n            <ul className=\"suggestions\">\r\n              {filteredLocations.map((location, index) => (\r\n                <li key={index} onClick={() => handleLocationClick(location)}>\r\n                  {location}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        {/* Rest of your form */}\r\n        <button type=\"submit\" className=\"btn mt-3\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncidentReportForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}