{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Colors } from \"../assets/Colors\";\nimport InputComponent from \"../components/global/InputComponent\";\nimport RoundedButton from \"../components/global/RoundedButton\";\nimport Image from \"../components/login-screen/Image\";\nimport axios from 'axios';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  var LoginFunction = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var loginData = {\n          email: email,\n          password: password\n        };\n        console.log(loginData);\n        var response = yield axios.post('http://192.168.27.9:3002/login', {\n          email: email,\n          password: password\n        });\n        console.log('Server response:', response.data);\n      } catch (error) {\n        console.error('Login failed:', error);\n      }\n    });\n    return function LoginFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsxs(View, {\n      style: styles.viewStyle,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 41\n        },\n        children: _jsx(Image, {})\n      }), _jsxs(View, {\n        style: [styles.viewStyle, {\n          gap: 30\n        }],\n        children: [_jsx(TextInput, {\n          placeholder: \"email\",\n          mode: \"text\",\n          onChangeText: function onChangeText(e) {\n            return setEmail(e);\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          mode: \"text\",\n          secure: true,\n          onChangeText: function onChangeText(e) {\n            return setPassword(e);\n          }\n        }), _jsx(RoundedButton, {\n          btnColor: Colors.black,\n          title: \"Login\",\n          onPressedFun: LoginFunction\n        }), _jsxs(View, {\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate(\"Register\");\n              },\n              children: _jsx(Text, {\n                style: [styles.text, {\n                  color: Colors.blue\n                }],\n                children: \"Register\"\n              })\n            }), _jsx(Text, {\n              style: [styles.text],\n              children: \" your account\"\n            })]\n          }), _jsx(Pressable, {\n            style: {\n              marginTop: 5\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"ForgotPassword\");\n            },\n            children: _jsx(Text, {\n              style: [styles.text, {\n                color: Colors.blue,\n                textAlign: \"center\"\n              }],\n              children: \"forgot password\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: Colors.gray\n  },\n  viewStyle: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: \"400\"\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","SafeAreaView","Text","Pressable","TextInput","Colors","InputComponent","RoundedButton","Image","axios","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigation","LoginFunction","_ref","_asyncToGenerator","loginData","console","log","response","post","data","error","apply","arguments","style","styles","root","children","viewStyle","marginBottom","gap","placeholder","mode","onChangeText","e","secure","btnColor","black","title","onPressedFun","flexDirection","onPress","navigate","text","color","blue","marginTop","textAlign","create","flex","alignItems","justifyContent","backgroundColor","gray","width","fontSize","fontWeight"],"sources":["D:/Q-phela-UI/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, SafeAreaView, Text, Pressable, TextInput } from \"react-native\";\r\nimport { Colors } from \"../assets/Colors\";\r\nimport InputComponent from \"../components/global/InputComponent\";\r\nimport RoundedButton from \"../components/global/RoundedButton\";\r\nimport Image from \"../components/login-screen/Image\";\r\nimport axios from 'axios'; // Import Axios\r\nimport { useNavigation } from \"@react-navigation/native\"; // Import the navigation hook\r\n\r\nexport default function LoginScreen() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigation = useNavigation(); // Use the navigation hook\r\n\r\n  const LoginFunction = async () => {\r\n    try {\r\n      // Create an object with the login data\r\n      const loginData = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n      console.log(loginData);\r\n\r\n      // Make a POST request to your server's login endpoint\r\n      const response = await axios.post('http://192.168.27.9:3002/login', {email,password});\r\n      \r\n\r\n      // Handle the server response here\r\n      console.log('Server response:', response.data);\r\n\r\n\r\n      \r\n    } catch (error) {\r\n      // Handle login errors (e.g., incorrect username or password)\r\n      console.error('Login failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.root}>\r\n      <View style={styles.viewStyle}>\r\n        <View style={{ marginBottom: 41 }}>\r\n          <Image />\r\n        </View>\r\n        <View style={[styles.viewStyle, { gap: 30 }]}>\r\n          <TextInput\r\n            placeholder=\"email\"\r\n            mode=\"text\"\r\n            onChangeText={(e)=> setEmail(e)}\r\n          />\r\n          <TextInput \r\n            placeholder=\"Password\"\r\n            mode=\"text\"   \r\n            secure={true}\r\n            onChangeText={(e)=> setPassword(e)}\r\n          />\r\n          <RoundedButton\r\n            btnColor={Colors.black}\r\n            title=\"Login\"\r\n            onPressedFun={LoginFunction}\r\n          />\r\n          <View>\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              <Pressable onPress={() => navigation.navigate(\"Register\")}>\r\n                <Text style={[styles.text, { color: Colors.blue }]}>\r\n                  Register\r\n                </Text>\r\n              </Pressable>\r\n              <Text style={[styles.text]}> your account</Text>\r\n            </View>\r\n            <Pressable\r\n              style={{ marginTop: 5 }}\r\n              onPress={() => navigation.navigate(\"ForgotPassword\")}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.text,\r\n                  { color: Colors.blue, textAlign: \"center\" },\r\n                ]}\r\n              >\r\n                forgot password\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: Colors.gray,\r\n  },\r\n  viewStyle: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}