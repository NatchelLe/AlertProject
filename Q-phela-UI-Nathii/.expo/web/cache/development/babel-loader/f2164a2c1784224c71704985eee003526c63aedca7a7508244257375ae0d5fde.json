{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport HamburgerMenu from \"../../assets/svg/HamburgerMenu\";\nimport LogoSvg from \"../../assets/svg/LogoSvg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Heading = function Heading() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDropdownVisible = _useState2[0],\n    setDropdownVisible = _useState2[1];\n  var toggleDropdown = function toggleDropdown() {\n    setDropdownVisible(!isDropdownVisible);\n  };\n  return _jsxs(TouchableOpacity, {\n    onPress: toggleDropdown,\n    children: [_jsxs(View, {\n      style: styles.headerRoot,\n      children: [_jsx(Image, {\n        source: require(\"../../assets/images/logo.png\"),\n        width: 10,\n        height: 10,\n        resizeMode: \"center\"\n      }), _jsx(HamburgerMenu, {})]\n    }), isDropdownVisible && _jsxs(View, {\n      style: styles.dropdown,\n      children: [_jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          children: \"Button 1\"\n        })\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          children: \"Button 2\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  headerRoot: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginHorizontal: 35\n  },\n  dropdown: {\n    position: \"absolute\",\n    top: \"100%\",\n    left: 0,\n    backgroundColor: \"white\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5\n  }\n});\nexport default Heading;","map":{"version":3,"names":["React","useState","StyleSheet","Image","Text","View","TouchableOpacity","HamburgerMenu","LogoSvg","jsx","_jsx","jsxs","_jsxs","Heading","_useState","_useState2","_slicedToArray","isDropdownVisible","setDropdownVisible","toggleDropdown","onPress","children","style","styles","headerRoot","source","require","width","height","resizeMode","dropdown","create","flexDirection","alignItems","justifyContent","marginHorizontal","position","top","left","backgroundColor","padding","borderWidth","borderColor","borderRadius"],"sources":["D:/Q-phela-UI/src/components/landing-screen/Heading.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Image, Text, View, TouchableOpacity } from \"react-native\";\r\nimport HamburgerMenu from \"../../assets/svg/HamburgerMenu\";\r\nimport LogoSvg from \"../../assets/svg/LogoSvg\";\r\n\r\nconst Heading = () => {\r\n  const [isDropdownVisible, setDropdownVisible] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setDropdownVisible(!isDropdownVisible);\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity onPress={toggleDropdown}>\r\n      <View style={styles.headerRoot}>\r\n        <Image\r\n          source={require(\"../../assets/images/logo.png\")}\r\n          width={10}\r\n          height={10}\r\n          resizeMode=\"center\"\r\n        />\r\n        <HamburgerMenu />\r\n      </View>\r\n      {isDropdownVisible && (\r\n        <View style={styles.dropdown}>\r\n          {/* Add your dropdown buttons here */}\r\n          <TouchableOpacity>\r\n            <Text>Button 1</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity>\r\n            <Text>Button 2</Text>\r\n          </TouchableOpacity>\r\n          {/* Add more buttons as needed */}\r\n        </View>\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  headerRoot: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginHorizontal: 35,\r\n  },\r\n  dropdown: {\r\n    position: \"absolute\",\r\n    top: \"100%\",\r\n    left: 0,\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nexport default Heading;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,OAAOC,aAAa;AACpB,OAAOC,OAAO;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAAgDb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,iBAAiB,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAE5C,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BD,kBAAkB,CAAC,CAACD,iBAAiB,CAAC;EACxC,CAAC;EAED,OACEL,KAAA,CAACN,gBAAgB;IAACc,OAAO,EAAED,cAAe;IAAAE,QAAA,GACxCT,KAAA,CAACP,IAAI;MAACiB,KAAK,EAAEC,MAAM,CAACC,UAAW;MAAAH,QAAA,GAC7BX,IAAA,CAACP,KAAK;QACJsB,MAAM,EAAEC,OAAO,+BAA+B,CAAE;QAChDC,KAAK,EAAE,EAAG;QACVC,MAAM,EAAE,EAAG;QACXC,UAAU,EAAC;MAAQ,CACpB,CAAC,EACFnB,IAAA,CAACH,aAAa,IAAE,CAAC;IAAA,CACb,CAAC,EACNU,iBAAiB,IAChBL,KAAA,CAACP,IAAI;MAACiB,KAAK,EAAEC,MAAM,CAACO,QAAS;MAAAT,QAAA,GAE3BX,IAAA,CAACJ,gBAAgB;QAAAe,QAAA,EACfX,IAAA,CAACN,IAAI;UAAAiB,QAAA,EAAC;QAAQ,CAAM;MAAC,CACL,CAAC,EACnBX,IAAA,CAACJ,gBAAgB;QAAAe,QAAA,EACfX,IAAA,CAACN,IAAI;UAAAiB,QAAA,EAAC;QAAQ,CAAM;MAAC,CACL,CAAC;IAAA,CAEf,CACP;EAAA,CACe,CAAC;AAEvB,CAAC;AAED,IAAME,MAAM,GAAGrB,UAAU,CAAC6B,MAAM,CAAC;EAC/BP,UAAU,EAAE;IACVQ,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,eAAe;IAC/BC,gBAAgB,EAAE;EACpB,CAAC;EACDL,QAAQ,EAAE;IACRM,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,MAAM;IACXC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAe9B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}