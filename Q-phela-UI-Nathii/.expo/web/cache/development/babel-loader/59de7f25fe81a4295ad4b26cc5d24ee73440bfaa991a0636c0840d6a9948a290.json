{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport { Colors } from \"../assets/Colors\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport LocationSvg from \"../assets/svg/LocationSvg\";\nimport RoundedButton from \"../components/global/RoundedButton\";\nimport axios from 'axios';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen() {\n  var navigation = useNavigation();\n  var _useState = useState({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    userData = _useState2[0],\n    setUserData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    Email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    Citizen_name = _useState6[0],\n    setCitizen_name = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    Password = _useState8[0],\n    setPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    Confirmassword = _useState10[0],\n    setConfirmassword = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    Contact_Number = _useState12[0],\n    setContact_Number = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    error = _useState14[0],\n    setError = _useState14[1];\n  var registerFun = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = {\n          email: Email,\n          citizen_name: Citizen_name,\n          password: Password,\n          contact_number: Contact_Number\n        };\n        var response = yield axios.post('http://localhost:3002/register', data);\n        console.log('Server response:', response.data);\n        console.log('Server response:', response.data);\n        if (response.data.success == true) {\n          navigation.navigate('Login');\n          return;\n        } else {\n          return;\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        setError('Registration failed. Please check your input and try again.');\n      }\n    });\n    return function registerFun() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleInputChange = function handleInputChange(key, value) {\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, _defineProperty({}, key, value)));\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.root,\n    children: [_jsxs(View, {\n      style: styles.svgtext,\n      children: [_jsx(LocationSvg, {}), _jsx(Text, {\n        style: styles.headerText,\n        children: \"Register your account\"\n      })]\n    }), _jsxs(View, {\n      style: styles.fields,\n      children: [_jsx(TextInput, {\n        placeholder: \"Username\",\n        mode: \"text\",\n        onChangeText: function onChangeText(e) {\n          return setCitizen_name(e);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Email\",\n        mode: \"email\",\n        onChangeText: function onChangeText(e) {\n          return setEmail(e);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Contact Number\",\n        mode: \"text\",\n        onChangeText: function onChangeText(e) {\n          return setContact_Number(e);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        mode: \"text\",\n        secure: true,\n        onChangeText: function onChangeText(e) {\n          return setPassword(e);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Confirm Password\",\n        mode: \"text\",\n        secure: true,\n        onChangeText: function onChangeText(e) {\n          return setConfirmassword(e);\n        }\n      }), _jsx(RoundedButton, {\n        title: \"Register\",\n        btnColor: Colors.black,\n        onPressedFun: registerFun\n      }), error && _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: Colors.gray\n  },\n  svgtext: {\n    gap: 31,\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: \"700\"\n  },\n  fields: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    gap: 20\n  },\n  errorText: {\n    color: \"red\",\n    marginTop: 10\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","Colors","Text","SafeAreaView","StyleSheet","View","TextInput","LocationSvg","RoundedButton","axios","useNavigation","jsx","_jsx","jsxs","_jsxs","RegisterScreen","navigation","_useState","username","email","password","confirmPassword","_useState2","_slicedToArray","userData","setUserData","_useState3","_useState4","Email","setEmail","_useState5","_useState6","Citizen_name","setCitizen_name","_useState7","_useState8","Password","setPassword","_useState9","_useState10","Confirmassword","setConfirmassword","_useState11","_useState12","Contact_Number","setContact_Number","_useState13","_useState14","error","setError","registerFun","_ref","_asyncToGenerator","data","citizen_name","contact_number","response","post","console","log","success","navigate","apply","arguments","handleInputChange","key","value","_objectSpread","_defineProperty","style","styles","root","children","svgtext","headerText","fields","placeholder","mode","onChangeText","e","secure","title","btnColor","black","onPressedFun","errorText","create","flex","alignItems","justifyContent","backgroundColor","gray","gap","marginBottom","fontSize","fontWeight","width","color","marginTop"],"sources":["D:/Q-phela-UI (2)/Q-phela-UI/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Colors } from \"../assets/Colors\";\r\nimport { Text, SafeAreaView, StyleSheet, View, TextInput } from \"react-native\";\r\nimport LocationSvg from \"../assets/svg/LocationSvg\";\r\nimport RoundedButton from \"../components/global/RoundedButton\";\r\nimport axios from 'axios';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nconst RegisterScreen = () => {\r\n  const navigation = useNavigation(); \r\n  const [userData, setUserData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [Email, setEmail]=useState('')\r\n  const [Citizen_name, setCitizen_name]=useState('')\r\n  const [Password, setPassword]=useState('')\r\n  const [Confirmassword, setConfirmassword]=useState('')\r\n  const [Contact_Number, setContact_Number]=useState('')\r\n\r\n  const [error, setError] = useState('');\r\n\r\n  const registerFun = async () => {\r\n    try {\r\n      var data={\r\n        email:Email,\r\n        citizen_name:Citizen_name,\r\n        password:Password,\r\n        contact_number:Contact_Number\r\n      }\r\n      // Make a POST request to your server's registration endpoint\r\n      const response = await axios.post('http://localhost:3002/register', data);\r\n\r\n      // Handle the server response here\r\n      console.log('Server response:', response.data);\r\n      console.log('Server response:', response.data);\r\n      if(response.data.success == true){\r\n        navigation.navigate('Login')\r\n        return;\r\n      }\r\n      else{\r\n\r\n        return\r\n      }\r\n\r\n      // You can also navigate to the login screen or perform other actions based on the response\r\n    } catch (error) {\r\n      // Handle any errors that occurred during the request\r\n      console.error('Error:', error);\r\n      setError('Registration failed. Please check your input and try again.');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (key, value) => {\r\n    // Update the userData state when the input fields change\r\n    setUserData({\r\n      ...userData,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.root}>\r\n      <View style={styles.svgtext}>\r\n        <LocationSvg />\r\n        <Text style={styles.headerText}>Register your account</Text>\r\n      </View>\r\n      <View style={styles.fields}>\r\n        <TextInput\r\n          placeholder=\"Username\"\r\n          mode=\"text\"\r\n          onChangeText={(e)=> setCitizen_name(e)}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Email\"\r\n          mode=\"email\"\r\n          onChangeText={(e)=> setEmail(e)}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Contact Number\"\r\n          mode=\"text\"\r\n          onChangeText={(e)=> setContact_Number(e)}\r\n        />\r\n        <TextInput \r\n          placeholder=\"Password\"\r\n          mode=\"text\"\r\n          secure={true}\r\n          onChangeText={(e)=> setPassword(e)}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Confirm Password\"\r\n          mode=\"text\"\r\n          secure={true}\r\n          onChangeText={(e)=> setConfirmassword(e)}\r\n        />\r\n\r\n        <RoundedButton\r\n          title=\"Register\"\r\n          btnColor={Colors.black}\r\n          onPressedFun={registerFun}\r\n        />\r\n        {error && <Text style={styles.errorText}>{error}</Text>}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: Colors.gray,\r\n  },\r\n  svgtext: {\r\n    gap: 31,\r\n    alignItems: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: \"700\",\r\n  },\r\n  fields: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    gap: 20,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}