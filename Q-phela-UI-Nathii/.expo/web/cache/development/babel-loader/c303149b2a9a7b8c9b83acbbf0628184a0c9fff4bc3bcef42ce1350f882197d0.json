{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport Heading from \"../components/landing-screen/Heading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar IncidentReportForm = function IncidentReportForm() {\n  var _useState = useState({\n      date: '',\n      location: '',\n      incidentType: [],\n      description: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    incident = _useState2[0],\n    setIncident = _useState2[1];\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n      name = _e$target.name,\n      value = _e$target.value,\n      checked = _e$target.checked;\n    if (name === 'incidentType') {\n      if (checked) {\n        setIncident(_objectSpread(_objectSpread({}, incident), {}, _defineProperty({}, name, [].concat(_toConsumableArray(incident.incidentType), [value]))));\n      } else {\n        setIncident(_objectSpread(_objectSpread({}, incident), {}, _defineProperty({}, name, incident.incidentType.filter(function (type) {\n          return type !== value;\n        }))));\n      }\n    } else {\n      setIncident(_objectSpread(_objectSpread({}, incident), {}, _defineProperty({}, name, value)));\n    }\n  };\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log('Incident data:', incident);\n    setIncident({\n      date: '',\n      location: '',\n      incidentType: [],\n      description: ''\n    });\n  };\n  return _jsxs(\"div\", {\n    className: \"container\",\n    children: [_jsx(\"style\", {\n      children: `\n        .container {\n          max-width: 400px;\n          margin: 0 auto;\n          padding: 20px;\n          font-family: 'Poppins', sans-serif;\n        }\n\n        h2 {\n          text-align: center;\n        }\n\n        label {\n          font-weight: bold;\n          display: flex;\n          align-items: center; /* Align checkbox and text vertically */\n          text-align: center; /* Center the label text */\n        }\n\n        input, textarea {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid #ccc;\n          border-radius: 6px;\n          font-family: 'Poppins', sans-serif;\n          background-color: #D9D9D9; /* Change background color to #D9D9D9 */\n        }\n\n        textarea {\n          margin-bottom: 10px; /* Add margin to create space under textareas */\n        }\n\n        .btn-container {\n          display: flex;\n          justify-content: flex-end; /* Move button to the right */\n          align-items: center; /* Center vertically with textarea */\n        }\n\n        .btn {\n          width: 92px;\n          height: 24px;\n          background-color: black;\n          color: white;\n          border: none;\n          border-radius: 6px;\n          cursor: pointer;\n          font-family: 'Poppins', sans-serif;\n        }\n\n        .btn:hover {\n          background-color: #000000; /* Darken on hover */\n        }\n\n        /* Add styles for Enter Location text area */\n        .enter-location {\n          width: 310px;\n          height: 29px;\n        }\n\n        /* Add styles for Date input */\n        .date-input {\n          width: 310px;\n          height: 20px;\n        }\n\n        /* Add styles for Incident Description textarea */\n        .incident-description {\n          width: 285px;\n          height: 127px;\n        }\n\n        /* Center the label for Incident Description */\n        .incident-description-label {\n          text-align: center;\n        }\n\n        /* Style for checkbox container */\n        .checkbox-container {\n          display: flex;\n          flex-direction: column;\n        }\n\n        /* Style for checkbox label */\n        .checkbox-label {\n          display: flex;\n          align-items: left; /* Align checkbox and text to the left */\n          margin-bottom: 5px;\n          margin-left: 0; /* Add margin-left to align the margin to the left */\n        }\n        `\n    }), _jsx(Heading, {}), _jsxs(\"div\", {\n      className: \"container\",\n      children: [_jsx(\"h2\", {\n        children: \"Incident Reporting\"\n      }), _jsxs(\"form\", {\n        onSubmit: handleSubmit,\n        children: [_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            children: \"Enter Location:\"\n          }), _jsx(\"input\", {\n            type: \"text\",\n            name: \"location\",\n            value: incident.location,\n            onChange: handleChange,\n            className: \"enter-location\"\n          })]\n        }), _jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            children: \"Date:\"\n          }), _jsx(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            value: incident.date,\n            onChange: handleChange,\n            className: \"date-input\"\n          })]\n        }), _jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            children: \"Incident Type:\"\n          }), _jsxs(\"div\", {\n            className: \"checkbox-container\",\n            children: [_jsxs(\"label\", {\n              className: \"checkbox-label\",\n              children: [_jsx(\"input\", {\n                type: \"checkbox\",\n                name: \"incidentType\",\n                value: \"Type 1\",\n                onChange: handleChange,\n                checked: incident.incidentType.includes('Type 1')\n              }), \"Car jacking\"]\n            }), _jsxs(\"label\", {\n              className: \"checkbox-label\",\n              children: [_jsx(\"input\", {\n                type: \"checkbox\",\n                name: \"incidentType\",\n                value: \"Type 2\",\n                onChange: handleChange,\n                checked: incident.incidentType.includes('Type 2')\n              }), \"Robbery\"]\n            }), _jsxs(\"label\", {\n              className: \"checkbox-label\",\n              children: [_jsx(\"input\", {\n                type: \"checkbox\",\n                name: \"incidentType\",\n                value: \"Type 3\",\n                onChange: handleChange,\n                checked: incident.incidentType.includes('Type 3')\n              }), \"Kidnapping\"]\n            }), _jsxs(\"label\", {\n              className: \"checkbox-label\",\n              children: [_jsx(\"input\", {\n                type: \"checkbox\",\n                name: \"incidentType\",\n                value: \"Type 4\",\n                onChange: handleChange,\n                checked: incident.incidentType.includes('Type 4')\n              }), \"Other\"]\n            })]\n          })]\n        }), _jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            className: \"incident-description-label\",\n            children: \"Incident Description:\"\n          }), _jsx(\"textarea\", {\n            name: \"description\",\n            value: incident.description,\n            onChange: handleChange,\n            className: \"incident-description\"\n          })]\n        }), _jsx(\"div\", {\n          className: \"btn-container\",\n          children: _jsx(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            children: \"Submit\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default IncidentReportForm;","map":{"version":3,"names":["React","useState","Heading","jsx","_jsx","jsxs","_jsxs","IncidentReportForm","_useState","date","location","incidentType","description","_useState2","_slicedToArray","incident","setIncident","handleChange","e","_e$target","target","name","value","checked","_objectSpread","_defineProperty","concat","_toConsumableArray","filter","type","handleSubmit","preventDefault","console","log","className","children","onSubmit","onChange","includes"],"sources":["D:/Q-phela-UI/src/screens/IncidentReportForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Heading from \"../components/landing-screen/Heading\";\r\n\r\nconst IncidentReportForm = () => {\r\n  const [incident, setIncident] = useState({\r\n    date: '',\r\n    location: '',\r\n    incidentType: [],\r\n    description: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, checked } = e.target;\r\n\r\n    if (name === 'incidentType') {\r\n      // If the target is a checkbox, update the incidentType array\r\n      if (checked) {\r\n        setIncident({\r\n          ...incident,\r\n          [name]: [...incident.incidentType, value],\r\n        });\r\n      } else {\r\n        setIncident({\r\n          ...incident,\r\n          [name]: incident.incidentType.filter((type) => type !== value),\r\n        });\r\n      }\r\n    } else {\r\n      // If the target is not a checkbox, update the state as usual\r\n      setIncident({\r\n        ...incident,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission (e.g., send data to a server, save to a database)\r\n    console.log('Incident data:', incident);\r\n    // Clear the form fields after submission\r\n    setIncident({\r\n      date: '',\r\n      location: '',\r\n      incidentType: [],\r\n      description: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <style>\r\n        {`\r\n        .container {\r\n          max-width: 400px;\r\n          margin: 0 auto;\r\n          padding: 20px;\r\n          font-family: 'Poppins', sans-serif;\r\n        }\r\n\r\n        h2 {\r\n          text-align: center;\r\n        }\r\n\r\n        label {\r\n          font-weight: bold;\r\n          display: flex;\r\n          align-items: center; /* Align checkbox and text vertically */\r\n          text-align: center; /* Center the label text */\r\n        }\r\n\r\n        input, textarea {\r\n          width: 100%;\r\n          padding: 8px;\r\n          border: 1px solid #ccc;\r\n          border-radius: 6px;\r\n          font-family: 'Poppins', sans-serif;\r\n          background-color: #D9D9D9; /* Change background color to #D9D9D9 */\r\n        }\r\n\r\n        textarea {\r\n          margin-bottom: 10px; /* Add margin to create space under textareas */\r\n        }\r\n\r\n        .btn-container {\r\n          display: flex;\r\n          justify-content: flex-end; /* Move button to the right */\r\n          align-items: center; /* Center vertically with textarea */\r\n        }\r\n\r\n        .btn {\r\n          width: 92px;\r\n          height: 24px;\r\n          background-color: black;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 6px;\r\n          cursor: pointer;\r\n          font-family: 'Poppins', sans-serif;\r\n        }\r\n\r\n        .btn:hover {\r\n          background-color: #000000; /* Darken on hover */\r\n        }\r\n\r\n        /* Add styles for Enter Location text area */\r\n        .enter-location {\r\n          width: 310px;\r\n          height: 29px;\r\n        }\r\n\r\n        /* Add styles for Date input */\r\n        .date-input {\r\n          width: 310px;\r\n          height: 20px;\r\n        }\r\n\r\n        /* Add styles for Incident Description textarea */\r\n        .incident-description {\r\n          width: 285px;\r\n          height: 127px;\r\n        }\r\n\r\n        /* Center the label for Incident Description */\r\n        .incident-description-label {\r\n          text-align: center;\r\n        }\r\n\r\n        /* Style for checkbox container */\r\n        .checkbox-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n\r\n        /* Style for checkbox label */\r\n        .checkbox-label {\r\n          display: flex;\r\n          align-items: left; /* Align checkbox and text to the left */\r\n          margin-bottom: 5px;\r\n          margin-left: 0; /* Add margin-left to align the margin to the left */\r\n        }\r\n        `}\r\n      </style>\r\n      <Heading />\r\n      <div className=\"container\">\r\n        <h2>Incident Reporting</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Enter Location:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              value={incident.location}\r\n              onChange={handleChange}\r\n              className=\"enter-location\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              value={incident.date}\r\n              onChange={handleChange}\r\n              className=\"date-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Incident Type:</label>\r\n            <div className=\"checkbox-container\">\r\n              <label className=\"checkbox-label\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"incidentType\"\r\n                  value=\"Type 1\"\r\n                  onChange={handleChange}\r\n                  checked={incident.incidentType.includes('Type 1')}\r\n                />\r\n                Car jacking\r\n              </label>\r\n              <label className=\"checkbox-label\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"incidentType\"\r\n                  value=\"Type 2\"\r\n                  onChange={handleChange}\r\n                  checked={incident.incidentType.includes('Type 2')}\r\n                />\r\n                Robbery\r\n              </label>\r\n              <label className=\"checkbox-label\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"incidentType\"\r\n                  value=\"Type 3\"\r\n                  onChange={handleChange}\r\n                  checked={incident.incidentType.includes('Type 3')}\r\n                />\r\n                Kidnapping\r\n              </label>\r\n              <label className=\"checkbox-label\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"incidentType\"\r\n                  value=\"Type 4\"\r\n                  onChange={handleChange}\r\n                  checked={incident.incidentType.includes('Type 4')}\r\n                />\r\n                Other\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"incident-description-label\">Incident Description:</label>\r\n            <textarea\r\n              name=\"description\"\r\n              value={incident.description}\r\n              onChange={handleChange}\r\n              className=\"incident-description\"\r\n            />\r\n          </div>\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" className=\"btn\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncidentReportForm;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO;AAA6C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3D,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAC/B,IAAAC,SAAA,GAAgCP,QAAQ,CAAC;MACvCQ,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE;IACf,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAN,SAAA;IALKO,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAO5B,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,CAAC,EAAK;IAC1B,IAAAC,SAAA,GAAiCD,CAAC,CAACE,MAAM;MAAjCC,IAAI,GAAAF,SAAA,CAAJE,IAAI;MAAEC,KAAK,GAAAH,SAAA,CAALG,KAAK;MAAEC,OAAO,GAAAJ,SAAA,CAAPI,OAAO;IAE5B,IAAIF,IAAI,KAAK,cAAc,EAAE;MAE3B,IAAIE,OAAO,EAAE;QACXP,WAAW,CAAAQ,aAAA,CAAAA,aAAA,KACNT,QAAQ,OAAAU,eAAA,KACVJ,IAAI,KAAAK,MAAA,CAAAC,kBAAA,CAAOZ,QAAQ,CAACJ,YAAY,IAAEW,KAAK,IACzC,CAAC;MACJ,CAAC,MAAM;QACLN,WAAW,CAAAQ,aAAA,CAAAA,aAAA,KACNT,QAAQ,OAAAU,eAAA,KACVJ,IAAI,EAAGN,QAAQ,CAACJ,YAAY,CAACiB,MAAM,CAAC,UAACC,IAAI;UAAA,OAAKA,IAAI,KAAKP,KAAK;QAAA,EAAC,EAC/D,CAAC;MACJ;IACF,CAAC,MAAM;MAELN,WAAW,CAAAQ,aAAA,CAAAA,aAAA,KACNT,QAAQ,OAAAU,eAAA,KACVJ,IAAI,EAAGC,KAAK,EACd,CAAC;IACJ;EACF,CAAC;EAED,IAAMQ,YAAY,GAAG,SAAfA,YAAYA,CAAIZ,CAAC,EAAK;IAC1BA,CAAC,CAACa,cAAc,CAAC,CAAC;IAElBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAElB,QAAQ,CAAC;IAEvCC,WAAW,CAAC;MACVP,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE;IACf,CAAC,CAAC;EACJ,CAAC;EAED,OACEN,KAAA;IAAK4B,SAAS,EAAC,WAAW;IAAAC,QAAA,GACxB/B,IAAA;MAAA+B,QAAA,EACI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS,CACI,CAAC,EACR/B,IAAA,CAACF,OAAO,IAAE,CAAC,EACXI,KAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAC,QAAA,GACxB/B,IAAA;QAAA+B,QAAA,EAAI;MAAkB,CAAI,CAAC,EAC3B7B,KAAA;QAAM8B,QAAQ,EAAEN,YAAa;QAAAK,QAAA,GAC3B7B,KAAA;UAAK4B,SAAS,EAAC,YAAY;UAAAC,QAAA,GACzB/B,IAAA;YAAA+B,QAAA,EAAO;UAAe,CAAO,CAAC,EAC9B/B,IAAA;YACEyB,IAAI,EAAC,MAAM;YACXR,IAAI,EAAC,UAAU;YACfC,KAAK,EAAEP,QAAQ,CAACL,QAAS;YACzB2B,QAAQ,EAAEpB,YAAa;YACvBiB,SAAS,EAAC;UAAgB,CAC3B,CAAC;QAAA,CACC,CAAC,EACN5B,KAAA;UAAK4B,SAAS,EAAC,YAAY;UAAAC,QAAA,GACzB/B,IAAA;YAAA+B,QAAA,EAAO;UAAK,CAAO,CAAC,EACpB/B,IAAA;YACEyB,IAAI,EAAC,MAAM;YACXR,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEP,QAAQ,CAACN,IAAK;YACrB4B,QAAQ,EAAEpB,YAAa;YACvBiB,SAAS,EAAC;UAAY,CACvB,CAAC;QAAA,CACC,CAAC,EAEN5B,KAAA;UAAK4B,SAAS,EAAC,YAAY;UAAAC,QAAA,GACzB/B,IAAA;YAAA+B,QAAA,EAAO;UAAc,CAAO,CAAC,EAC7B7B,KAAA;YAAK4B,SAAS,EAAC,oBAAoB;YAAAC,QAAA,GACjC7B,KAAA;cAAO4B,SAAS,EAAC,gBAAgB;cAAAC,QAAA,GAC/B/B,IAAA;gBACEyB,IAAI,EAAC,UAAU;gBACfR,IAAI,EAAC,cAAc;gBACnBC,KAAK,EAAC,QAAQ;gBACde,QAAQ,EAAEpB,YAAa;gBACvBM,OAAO,EAAER,QAAQ,CAACJ,YAAY,CAAC2B,QAAQ,CAAC,QAAQ;cAAE,CACnD,CAAC,eAEJ;YAAA,CAAO,CAAC,EACRhC,KAAA;cAAO4B,SAAS,EAAC,gBAAgB;cAAAC,QAAA,GAC/B/B,IAAA;gBACEyB,IAAI,EAAC,UAAU;gBACfR,IAAI,EAAC,cAAc;gBACnBC,KAAK,EAAC,QAAQ;gBACde,QAAQ,EAAEpB,YAAa;gBACvBM,OAAO,EAAER,QAAQ,CAACJ,YAAY,CAAC2B,QAAQ,CAAC,QAAQ;cAAE,CACnD,CAAC,WAEJ;YAAA,CAAO,CAAC,EACRhC,KAAA;cAAO4B,SAAS,EAAC,gBAAgB;cAAAC,QAAA,GAC/B/B,IAAA;gBACEyB,IAAI,EAAC,UAAU;gBACfR,IAAI,EAAC,cAAc;gBACnBC,KAAK,EAAC,QAAQ;gBACde,QAAQ,EAAEpB,YAAa;gBACvBM,OAAO,EAAER,QAAQ,CAACJ,YAAY,CAAC2B,QAAQ,CAAC,QAAQ;cAAE,CACnD,CAAC,cAEJ;YAAA,CAAO,CAAC,EACRhC,KAAA;cAAO4B,SAAS,EAAC,gBAAgB;cAAAC,QAAA,GAC/B/B,IAAA;gBACEyB,IAAI,EAAC,UAAU;gBACfR,IAAI,EAAC,cAAc;gBACnBC,KAAK,EAAC,QAAQ;gBACde,QAAQ,EAAEpB,YAAa;gBACvBM,OAAO,EAAER,QAAQ,CAACJ,YAAY,CAAC2B,QAAQ,CAAC,QAAQ;cAAE,CACnD,CAAC,SAEJ;YAAA,CAAO,CAAC;UAAA,CACL,CAAC;QAAA,CACH,CAAC,EACNhC,KAAA;UAAK4B,SAAS,EAAC,YAAY;UAAAC,QAAA,GACzB/B,IAAA;YAAO8B,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAC;UAAqB,CAAO,CAAC,EAC3E/B,IAAA;YACEiB,IAAI,EAAC,aAAa;YAClBC,KAAK,EAAEP,QAAQ,CAACH,WAAY;YAC5ByB,QAAQ,EAAEpB,YAAa;YACvBiB,SAAS,EAAC;UAAsB,CACjC,CAAC;QAAA,CACC,CAAC,EACN9B,IAAA;UAAK8B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC5B/B,IAAA;YAAQyB,IAAI,EAAC,QAAQ;YAACK,SAAS,EAAC,KAAK;YAAAC,QAAA,EAAC;UAEtC,CAAQ;QAAC,CACN,CAAC;MAAA,CACF,CAAC;IAAA,CACJ,CAAC;EAAA,CACH,CAAC;AAEV,CAAC;AAED,eAAe5B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}