{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Heading2 = function Heading2() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDropdownVisible = _useState2[0],\n    setDropdownVisible = _useState2[1];\n  var toggleDropdown = function toggleDropdown() {\n    setDropdownVisible(!isDropdownVisible);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Screen Text\"\n      }), _jsx(TouchableOpacity, {\n        onPress: toggleDropdown,\n        style: styles.dropbtn,\n        children: _jsx(Text, {\n          style: {\n            color: 'white',\n            fontSize: 16\n          },\n          children: \"Dropdown\"\n        })\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.scrollView,\n      children: isDropdownVisible && _jsxs(View, {\n        style: styles.dropdownContent,\n        children: [_jsx(TouchableOpacity, {\n          onPress: toggleDropdown,\n          children: _jsx(Text, {\n            children: \"Home\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: toggleDropdown,\n          children: _jsx(Text, {\n            children: \"About\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: toggleDropdown,\n          children: _jsx(Text, {\n            children: \"Contact\"\n          })\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    padding: 10\n  },\n  headerText: {\n    flex: 1,\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  dropbtn: {\n    backgroundColor: '#04AA6D',\n    padding: 16,\n    fontSize: 16,\n    border: 'none',\n    cursor: 'pointer'\n  },\n  scrollView: {\n    flex: 1\n  },\n  dropdownContent: {\n    position: 'absolute',\n    backgroundColor: '#f1f1f1',\n    minWidth: 160,\n    maxHeight: 150,\n    overflow: 'auto',\n    shadowColor: 'rgba(0, 0, 0, 0.2)',\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowRadius: 16,\n    zIndex: 1,\n    right: 0\n  }\n});\nexport default Heading2;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","ScrollView","jsx","_jsx","jsxs","_jsxs","Heading2","_useState","_useState2","_slicedToArray","isDropdownVisible","setDropdownVisible","toggleDropdown","style","styles","container","children","header","headerText","onPress","dropbtn","color","fontSize","scrollView","dropdownContent","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","padding","fontWeight","border","cursor","position","minWidth","maxHeight","overflow","shadowColor","shadowOffset","width","height","shadowRadius","zIndex","right"],"sources":["D:/Q-phela-UI/src/components/landing-screen/Heading2.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ScrollView, // Use ScrollView to make text scrollable\r\n} from 'react-native';\r\n\r\nconst Heading2 = () => {\r\n  const [isDropdownVisible, setDropdownVisible] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setDropdownVisible(!isDropdownVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>Screen Text</Text>\r\n        <TouchableOpacity onPress={toggleDropdown} style={styles.dropbtn}>\r\n          <Text style={{ color: 'white', fontSize: 16 }}>Dropdown</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <ScrollView style={styles.scrollView}>\r\n        {/* Your content here */}\r\n        {isDropdownVisible && (\r\n          <View style={styles.dropdownContent}>\r\n            <TouchableOpacity onPress={toggleDropdown}>\r\n              <Text>Home</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={toggleDropdown}>\r\n              <Text>About</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={toggleDropdown}>\r\n              <Text>Contact</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  headerText: {\r\n    flex: 1,\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  dropbtn: {\r\n    backgroundColor: '#04AA6D',\r\n    padding: 16,\r\n    fontSize: 16,\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n  scrollView: {\r\n    flex: 1,\r\n  },\r\n  dropdownContent: {\r\n    position: 'absolute',\r\n    backgroundColor: '#f1f1f1',\r\n    minWidth: 160,\r\n    maxHeight: 150, // Limit the dropdown's height\r\n    overflow: 'auto',\r\n    shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n    shadowOffset: { width: 0, height: 8 },\r\n    shadowRadius: 16,\r\n    zIndex: 1,\r\n    right: 0,\r\n  },\r\n});\r\n\r\nexport default Heading2;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AASxC,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACrB,IAAAC,SAAA,GAAgDX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,iBAAiB,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAE5C,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BD,kBAAkB,CAAC,CAACD,iBAAiB,CAAC;EACxC,CAAC;EAED,OACEL,KAAA,CAACR,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BX,KAAA,CAACR,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,GACzBb,IAAA,CAACL,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACI,UAAW;QAAAF,QAAA,EAAC;MAAW,CAAM,CAAC,EAClDb,IAAA,CAACJ,gBAAgB;QAACoB,OAAO,EAAEP,cAAe;QAACC,KAAK,EAAEC,MAAM,CAACM,OAAQ;QAAAJ,QAAA,EAC/Db,IAAA,CAACL,IAAI;UAACe,KAAK,EAAE;YAAEQ,KAAK,EAAE,OAAO;YAAEC,QAAQ,EAAE;UAAG,CAAE;UAAAN,QAAA,EAAC;QAAQ,CAAM;MAAC,CAC9C,CAAC;IAAA,CACf,CAAC,EAEPb,IAAA,CAACF,UAAU;MAACY,KAAK,EAAEC,MAAM,CAACS,UAAW;MAAAP,QAAA,EAElCN,iBAAiB,IAChBL,KAAA,CAACR,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACU,eAAgB;QAAAR,QAAA,GAClCb,IAAA,CAACJ,gBAAgB;UAACoB,OAAO,EAAEP,cAAe;UAAAI,QAAA,EACxCb,IAAA,CAACL,IAAI;YAAAkB,QAAA,EAAC;UAAI,CAAM;QAAC,CACD,CAAC,EACnBb,IAAA,CAACJ,gBAAgB;UAACoB,OAAO,EAAEP,cAAe;UAAAI,QAAA,EACxCb,IAAA,CAACL,IAAI;YAAAkB,QAAA,EAAC;UAAK,CAAM;QAAC,CACF,CAAC,EACnBb,IAAA,CAACJ,gBAAgB;UAACoB,OAAO,EAAEP,cAAe;UAAAI,QAAA,EACxCb,IAAA,CAACL,IAAI;YAAAkB,QAAA,EAAC;UAAO,CAAM;QAAC,CACJ,CAAC;MAAA,CACf;IACP,CACS,CAAC;EAAA,CACT,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGd,UAAU,CAACyB,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDV,MAAM,EAAE;IACNW,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,UAAU;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDb,UAAU,EAAE;IACVQ,IAAI,EAAE,CAAC;IACPJ,QAAQ,EAAE,EAAE;IACZU,UAAU,EAAE;EACd,CAAC;EACDZ,OAAO,EAAE;IACPO,eAAe,EAAE,SAAS;IAC1BI,OAAO,EAAE,EAAE;IACXT,QAAQ,EAAE,EAAE;IACZW,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;EACV,CAAC;EACDX,UAAU,EAAE;IACVG,IAAI,EAAE;EACR,CAAC;EACDF,eAAe,EAAE;IACfW,QAAQ,EAAE,UAAU;IACpBR,eAAe,EAAE,SAAS;IAC1BS,QAAQ,EAAE,GAAG;IACbC,SAAS,EAAE,GAAG;IACdC,QAAQ,EAAE,MAAM;IAChBC,WAAW,EAAE,oBAAoB;IACjCC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAevC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}