{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Heading from \"../components/landing-screen/Heading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TipsPage = function TipsPage() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    tipText = _useState2[0],\n    setTipText = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    tips = _useState4[0],\n    setTips = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    user = _useState6[0],\n    setUser = _useState6[1];\n  useEffect(function () {\n    fetch(\"http://localhost:3006/safety_tip/\", {\n      method: \"GET\"\n    }).then(function (response) {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(function (userData) {\n      setUser(userData);\n    }).catch(function (error) {\n      console.error(\"Error fetching user data:\", error);\n    });\n  }, []);\n  var handleAddTip = function handleAddTip() {\n    if (tipText && user) {\n      var _user = {\n        username: citizen_id\n      };\n      var newTip = {\n        tip_description: tipText,\n        citizen_id: _user.citizen_id\n      };\n      fetch(\"http://localhost:3006/safety_tip\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newTip)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n        if (data.message === \"Safety tip added successfully\") {\n          setTipText(\"\");\n        } else {}\n      }).catch(function (error) {\n        console.error(\"Error:\", error);\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Heading, {}), \" \", _jsx(Text, {\n      style: styles.listTitle,\n      textAlign: \"center\",\n      children: \"Alert Community\"\n    }), _jsx(FlatList, {\n      data: tips,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(View, {\n          style: styles.commentContainer,\n          children: _jsxs(Text, {\n            style: styles.tipAndUser,\n            children: [_jsxs(Text, {\n              style: [styles.username, {\n                textAlign: \"center\"\n              }],\n              children: [item.user.username, \":\"]\n            }), \" \", _jsx(Text, {\n              style: styles.tip,\n              textAlign: \"center\",\n              children: item.text\n            })]\n          })\n        });\n      },\n      ListEmptyComponent: function ListEmptyComponent() {\n        return _jsx(Text, {\n          style: [styles.emptyList, {\n            textAlign: \"center\"\n          }],\n          children: \"No tips yet\"\n        });\n      }\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter your tip here\",\n        value: tipText,\n        onChangeText: function onChangeText(text) {\n          return setTipText(text);\n        },\n        multiline: true,\n        numberOfLines: 3\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(Button, {\n          title: \"Add Tip\",\n          onPress: handleAddTip,\n          color: \"black\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: \"#fff\",\n    elevation: 12\n  },\n  listTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 8,\n    textAlign: \"center\"\n  },\n  commentContainer: {\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 4,\n    padding: 8,\n    marginBottom: 8\n  },\n  tipAndUser: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  username: {\n    fontWeight: \"bold\",\n    marginRight: 8,\n    textAlign: \"center\"\n  },\n  tip: {\n    fontSize: 16,\n    textAlign: \"center\"\n  },\n  emptyList: {\n    fontSize: 16,\n    color: \"#777\"\n  },\n  inputContainer: {\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    marginTop: 16\n  },\n  input: {\n    width: 363,\n    height: 51,\n    marginBottom: 8,\n    backgroundColor: \"#D9D9D9\",\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 6,\n    padding: 8,\n    textAlign: \"center\"\n  },\n  buttonContainer: {\n    width: 82,\n    height: 28,\n    alignSelf: \"flex-end\",\n    borderRadius: 6\n  }\n});\nexport default TipsPage;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","Button","FlatList","StyleSheet","Heading","jsx","_jsx","jsxs","_jsxs","TipsPage","_useState","_useState2","_slicedToArray","tipText","setTipText","_useState3","_useState4","tips","setTips","_useState5","_useState6","user","setUser","fetch","method","then","response","ok","Error","json","userData","catch","error","console","handleAddTip","username","citizen_id","newTip","tip_description","headers","body","JSON","stringify","data","log","message","style","styles","container","children","listTitle","textAlign","keyExtractor","item","index","toString","renderItem","_ref","commentContainer","tipAndUser","tip","text","ListEmptyComponent","emptyList","inputContainer","input","placeholder","value","onChangeText","multiline","numberOfLines","buttonContainer","title","onPress","color","create","flex","padding","backgroundColor","elevation","fontSize","fontWeight","marginBottom","borderWidth","borderColor","borderRadius","flexDirection","alignItems","marginRight","marginTop","width","height","alignSelf"],"sources":["D:/Q-phela-UI (2)/Q-phela-UI/src/screens/TipsPage.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, Text, TextInput, Button, FlatList, StyleSheet } from \"react-native\";\r\nimport Heading from \"../components/landing-screen/Heading\"; // Import the Heading component\r\n\r\nconst TipsPage = () => {\r\n  const [tipText, setTipText] = useState(\"\");\r\n  const [tips, setTips] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  useEffect(() => {\r\n    // Fetch user data from your Express backend\r\n    fetch(\"http://localhost:3006/safety_tip/\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((userData) => {\r\n        // Update the user state with the retrieved user data\r\n        setUser(userData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching user data:\", error);\r\n        // Handle the error appropriately, e.g., show an error message to the user\r\n      });\r\n  }, []);\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Button, FlatList, StyleSheet } from \"react-native\";\r\nimport Heading from \"../components/landing-screen/Heading\"; // Import the Heading component\r\n\r\nconst TipsPage = () => {\r\n  const [tipText, setTipText] = useState(\"\");\r\n  const [tips, setTips] = useState([]);\r\n  */\r\n  const handleAddTip = () => {\r\n    if (tipText && user) {\r\n      const user = { username: citizen_id }; // Replace with the actual user object\r\n      const newTip = { tip_description: tipText, citizen_id: user.citizen_id}; // Adjust the data structure to match your API\r\n  \r\n      fetch(\"http://localhost:3006/safety_tip\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newTip),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          // Handle the response from the server\r\n          console.log(data);\r\n          // Assuming the response contains a success message\r\n          if (data.message === \"Safety tip added successfully\") {\r\n            // Add the new tip to the local state if needed\r\n            // Clear the input\r\n            setTipText(\"\");\r\n          } else {\r\n            // Handle errors, if any\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          // Handle network errors or other issues\r\n        });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n  const handleAddTip = () => {\r\n    if (tipText) {\r\n      // Assuming you have a user object with a 'username' property\r\n      const user = { username: \"User123\" }; // Replace with the actual user object\r\n      // Create a new tip object with both tipText and the user who posted it\r\n      const newTip = { text: tipText, user: user };\r\n\r\n      // Add the newTip to the tips array\r\n      setTips([newTip, ...tips]);\r\n\r\n      // Clear the input\r\n      setTipText(\"\");\r\n    }\r\n  };*/\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Heading /> {/* Include the Heading component here */}\r\n      <Text style={styles.listTitle} textAlign=\"center\">\r\n        Alert Community\r\n      </Text>\r\n      <FlatList\r\n        data={tips}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.commentContainer}>\r\n            <Text style={styles.tipAndUser}>\r\n              <Text style={[styles.username, { textAlign: \"center\" }]}>\r\n                {item.user.username}:\r\n              </Text>{\" \"}\r\n              <Text style={styles.tip} textAlign=\"center\">\r\n                {item.text}\r\n              </Text>\r\n            </Text>\r\n          </View>\r\n        )}\r\n        ListEmptyComponent={() => (\r\n          <Text style={[styles.emptyList, { textAlign: \"center\" }]}>\r\n            No tips yet\r\n          </Text>\r\n        )}\r\n      />\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter your tip here\"\r\n          value={tipText}\r\n          onChangeText={(text) => setTipText(text)}\r\n          multiline={true}\r\n          numberOfLines={3}\r\n        />\r\n        <View style={styles.buttonContainer}>\r\n          <Button\r\n            title=\"Add Tip\"\r\n            onPress={handleAddTip}\r\n            color=\"black\" // Set the button background color to black\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: \"#fff\",\r\n    elevation: 12, // Add a shadow with a depth of 12\r\n  },\r\n  listTitle: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 8,\r\n    textAlign: \"center\", // Center-align the text\r\n  },\r\n  commentContainer: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 4,\r\n    padding: 8,\r\n    marginBottom: 8,\r\n  },\r\n  tipAndUser: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  username: {\r\n    fontWeight: \"bold\",\r\n    marginRight: 8,\r\n    textAlign: \"center\", // Center-align the text\r\n  },\r\n  tip: {\r\n    fontSize: 16,\r\n    textAlign: \"center\", // Center-align the text\r\n  },\r\n  emptyList: {\r\n    fontSize: 16,\r\n    color: \"#777\",\r\n    \r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"stretch\",\r\n    marginTop: 16,\r\n  },\r\n  input: {\r\n    width: 363,\r\n    height: 51,\r\n    marginBottom: 8,\r\n    backgroundColor: \"#D9D9D9\", // Set the background color to light grey\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 6, // Set the corner radius to 6\r\n    padding: 8,\r\n    textAlign: \"center\", // Center-align the text\r\n  },\r\n  buttonContainer: {\r\n    width: 82,\r\n    height: 28,\r\n    alignSelf: \"flex-end\", // Align the button to the right\r\n    borderRadius: 6, // Set the corner radius of the button to 6\r\n  },\r\n});\r\n\r\nexport default TipsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}