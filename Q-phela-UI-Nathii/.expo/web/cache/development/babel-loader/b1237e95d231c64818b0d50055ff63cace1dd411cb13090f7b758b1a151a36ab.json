{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Colors } from \"../assets/Colors\";\nimport InputComponent from \"../components/global/InputComponent\";\nimport RoundedButton from \"../components/global/RoundedButton\";\nimport Image from \"../components/login-screen/Image\";\nimport axios from 'axios';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loginMessage = _useState6[0],\n    setLoginMessage = _useState6[1];\n  var navigation = useNavigation();\n  var LoginFunction = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var loginData = {\n          email: email,\n          password: password\n        };\n        console.log(loginData);\n        var response = yield axios.post('http://localhost:3002/login', loginData);\n        console.log('Server response:', response.data);\n        if (response.data.success) {\n          if (response.data.role === 'citizen') {\n            localStorage.setItem(\"citizen_id\", response.data.results[0].citizen_id.toString());\n            localStorage.setItem(\"citizen_name\", response.data.results[0].citizen_name.toString());\n            setLoginMessage('Logged in as a citizen');\n            navigation.navigate('TipsPage');\n          } else if (response.data.role === 'admin') {\n            setLoginMessage('Logged in as an admin');\n            navigation.navigate('AdminDashboard');\n          }\n        } else {\n          setLoginMessage('Successful: ' + response.data.message);\n        }\n      } catch (error) {\n        setLoginMessage('Login failed: ' + error.message);\n      }\n    });\n    return function LoginFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsxs(View, {\n      style: styles.viewStyle,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 41\n        },\n        children: _jsx(Image, {})\n      }), _jsxs(View, {\n        style: [styles.viewStyle, {\n          gap: 30\n        }],\n        children: [_jsx(TextInput, {\n          placeholder: \"email\",\n          mode: \"text\",\n          onChangeText: function onChangeText(e) {\n            return setEmail(e);\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          mode: \"text\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(e) {\n            return setPassword(e);\n          }\n        }), _jsx(RoundedButton, {\n          btnColor: Colors.black,\n          title: \"Login\",\n          onPressedFun: LoginFunction\n        }), _jsx(Text, {\n          style: {\n            color: 'red'\n          },\n          children: loginMessage\n        }), \" \", _jsxs(View, {\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate(\"Register\");\n              },\n              children: _jsx(Text, {\n                style: [styles.text, {\n                  color: Colors.blue\n                }],\n                children: \"Register\"\n              })\n            }), _jsx(Text, {\n              style: [styles.text],\n              children: \" your account\"\n            })]\n          }), _jsx(Pressable, {\n            style: {\n              marginTop: 5\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"ForgotPassword\");\n            },\n            children: _jsx(Text, {\n              style: [styles.text, {\n                color: Colors.blue,\n                textAlign: \"center\"\n              }],\n              children: \"forgot password\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: Colors.gray\n  },\n  viewStyle: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: \"400\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","SafeAreaView","Text","Pressable","TextInput","Colors","InputComponent","RoundedButton","Image","axios","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loginMessage","setLoginMessage","navigation","LoginFunction","_ref","_asyncToGenerator","loginData","console","log","response","post","data","success","role","localStorage","setItem","results","citizen_id","toString","citizen_name","navigate","message","error","apply","arguments","style","styles","root","children","viewStyle","marginBottom","gap","placeholder","mode","onChangeText","e","secureTextEntry","btnColor","black","title","onPressedFun","color","flexDirection","onPress","text","blue","marginTop","textAlign","create","flex","alignItems","justifyContent","backgroundColor","gray","width","fontSize","fontWeight"],"sources":["D:/Q-phela-UI/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Text,\r\n  Pressable,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { Colors } from \"../assets/Colors\";\r\nimport InputComponent from \"../components/global/InputComponent\";\r\nimport RoundedButton from \"../components/global/RoundedButton\";\r\nimport Image from \"../components/login-screen/Image\";\r\nimport axios from 'axios';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default function LoginScreen() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginMessage, setLoginMessage] = useState(\"\"); // To store login messages\r\n  const navigation = useNavigation();\r\n\r\n  const LoginFunction = async () => {\r\n    try {\r\n      const loginData = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n      console.log(loginData);\r\n\r\n      const response = await axios.post('http://localhost:3002/login', loginData);\r\n      console.log('Server response:', response.data);\r\n\r\n      if (response.data.success) {\r\n        if (response.data.role === 'citizen') {\r\n          localStorage.setItem(\"citizen_id\", response.data.results[0].citizen_id.toString())\r\n          localStorage.setItem(\"citizen_name\", response.data.results[0].citizen_name.toString())\r\n          setLoginMessage('Logged in as a citizen');\r\n          navigation.navigate('TipsPage');\r\n        } else if (response.data.role === 'admin') {\r\n          setLoginMessage('Logged in as an admin');\r\n          navigation.navigate('AdminDashboard');\r\n        }\r\n      } else {\r\n        setLoginMessage('Successful: ' + response.data.message);\r\n      }\r\n    } catch (error) {\r\n      setLoginMessage('Login failed: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.root}>\r\n      <View style={styles.viewStyle}>\r\n        <View style={{ marginBottom: 41 }}>\r\n          <Image />\r\n        </View>\r\n        <View style={[styles.viewStyle, { gap: 30 }]}>\r\n          <TextInput\r\n            placeholder=\"email\"\r\n            mode=\"text\"\r\n            onChangeText={(e) => setEmail(e)}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Password\"\r\n            mode=\"text\"\r\n            secureTextEntry={true} // Use secureTextEntry for password\r\n            onChangeText={(e) => setPassword(e)}\r\n          />\r\n          <RoundedButton\r\n            btnColor={Colors.black}\r\n            title=\"Login\"\r\n            onPressedFun={LoginFunction}\r\n          />\r\n          <Text style={{ color: 'red' }}>{loginMessage}</Text> {/* Display login message */}\r\n          <View>\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              <Pressable onPress={() => navigation.navigate(\"Register\")}>\r\n                <Text style={[styles.text, { color: Colors.blue }]}>\r\n                  Register\r\n                </Text>\r\n              </Pressable>\r\n              <Text style={[styles.text]}> your account</Text>\r\n            </View>\r\n            <Pressable style={{ marginTop: 5 }} onPress={() => navigation.navigate(\"ForgotPassword\")}>\r\n              <Text style={[styles.text, { color: Colors.blue, textAlign: \"center\" }]}>\r\n                forgot password\r\n              </Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: Colors.gray,\r\n  },\r\n  viewStyle: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}