{"ast":null,"code":"import React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Colors } from \"../assets/Colors\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LocationSvg from \"../assets/svg/LocationSvg\";\nimport InputComponent from \"../components/global/InputComponent\";\nimport RoundedButton from \"../components/global/RoundedButton\";\nimport { Formik } from \"formik\";\nimport { RegisterValidationSchema } from \"../assets/constants/Schemas\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen() {\n  var navigation = useNavigation();\n  return _jsxs(SafeAreaView, {\n    style: styles.root,\n    children: [_jsxs(View, {\n      style: styles.svgtext,\n      children: [_jsx(LocationSvg, {}), _jsx(Text, {\n        style: styles.headerText,\n        children: \"Register your account\"\n      })]\n    }), _jsx(View, {\n      style: styles.fields,\n      children: _jsx(Formik, {\n        validationSchema: RegisterValidationSchema,\n        initialValues: {\n          username: \"\",\n          email: \"\",\n          contactNumber: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        },\n        onSubmit: function onSubmit(values) {\n          return console.log(values);\n        },\n        children: function children(_ref) {\n          var values = _ref.values,\n            handleChange = _ref.handleChange,\n            isValid = _ref.isValid,\n            errors = _ref.errors,\n            handleBlur = _ref.handleBlur,\n            handleSubmit = _ref.handleSubmit;\n          return _jsxs(_Fragment, {\n            children: [_jsx(InputComponent, {\n              name: \"username\",\n              onChangeText: handleChange(\"username\"),\n              onBlur: handleBlur(\"username\"),\n              value: values.username,\n              placeholder: \"Username\",\n              mode: \"text\",\n              errors: errors.username\n            }), _jsx(InputComponent, {\n              name: \"email\",\n              onChangeText: handleChange(\"email\"),\n              onBlur: handleBlur(\"email\"),\n              value: values.email,\n              placeholder: \"Email\",\n              mode: \"email\",\n              errors: errors.email\n            }), _jsx(InputComponent, {\n              name: \"contactNumber\",\n              onChangeText: handleChange(\"contactNumber\"),\n              onBlur: handleBlur(\"contactNumber\"),\n              value: values.contactNumber,\n              placeholder: \"Phone number\",\n              mode: \"numeric\",\n              errors: errors.contactNumber\n            }), _jsx(InputComponent, {\n              name: \"password\",\n              errors: errors.password,\n              placeholder: \"Password\",\n              mode: \"text\",\n              secure: true,\n              onChangeText: handleChange(\"password\"),\n              onBlur: handleBlur(\"password\"),\n              value: values.password\n            }), _jsx(InputComponent, {\n              name: \"confirmPassword\",\n              errors: errors.confirmPassword,\n              placeholder: \"Confirm Password\",\n              mode: \"text\",\n              secure: true,\n              onChangeText: handleChange(\"confirmPassword\"),\n              onBlur: handleBlur(\"confirmPassword\"),\n              value: values.confirmPassword\n            }), _jsx(RoundedButton, {\n              btnColor: Colors.black,\n              title: \"Sign Up\",\n              isDisabled: isValid,\n              onPressedFun: handleSubmit\n            })]\n          });\n        }\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: Colors.gray\n  },\n  svgtext: {\n    gap: 31,\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: \"700\"\n  },\n  fields: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    gap: 20\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useNavigation","Colors","Text","SafeAreaView","StyleSheet","View","LocationSvg","InputComponent","RoundedButton","Formik","RegisterValidationSchema","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RegisterScreen","navigation","style","styles","root","children","svgtext","headerText","fields","validationSchema","initialValues","username","email","contactNumber","password","confirmPassword","onSubmit","values","console","log","_ref","handleChange","isValid","errors","handleBlur","handleSubmit","name","onChangeText","onBlur","value","placeholder","mode","secure","btnColor","black","title","isDisabled","onPressedFun","create","flex","alignItems","justifyContent","backgroundColor","gray","gap","marginBottom","fontSize","fontWeight","width"],"sources":["C:/Users/Student/Desktop/Q-phela-UI-Nathii (2) (1)/Q-phela-UI-Nathii (3)/Q-phela-UI-Nathii (2)/Q-phela-UI-Nathii/Q-phela-UI-Nathii/src/screens/RegisterScreen.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Colors } from \"../assets/Colors\";\r\nimport { Text, SafeAreaView, StyleSheet, View } from \"react-native\";\r\nimport LocationSvg from \"../assets/svg/LocationSvg\";\r\nimport InputComponent from \"../components/global/InputComponent\";\r\nimport RoundedButton from \"../components/global/RoundedButton\";\r\nimport { Formik } from \"formik\";\r\nimport { RegisterValidationSchema } from \"../assets/constants/Schemas\";\r\n\r\nconst RegisterScreen = () => {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <SafeAreaView style={styles.root}>\r\n      <View style={styles.svgtext}>\r\n        <LocationSvg />\r\n        <Text style={styles.headerText}>Register your account</Text>\r\n      </View>\r\n      <View style={styles.fields}>\r\n        <Formik\r\n          validationSchema={RegisterValidationSchema}\r\n          initialValues={{ username: \"\", email: \"\", contactNumber: \"\", password: \"\", confirmPassword: \"\" }}\r\n          onSubmit={(values) => console.log(values)}\r\n        >\r\n          {({\r\n            values,\r\n            handleChange,\r\n            isValid,\r\n            errors,\r\n            handleBlur,\r\n            handleSubmit,\r\n          }) => (\r\n            <>\r\n              <InputComponent\r\n                name=\"username\"\r\n                onChangeText={handleChange(\"username\")}\r\n                onBlur={handleBlur(\"username\")}\r\n                value={values.username}\r\n                placeholder=\"Username\"\r\n                mode=\"text\"\r\n                errors={errors.username}\r\n              />\r\n              <InputComponent\r\n                name=\"email\"\r\n                onChangeText={handleChange(\"email\")}\r\n                onBlur={handleBlur(\"email\")}\r\n                value={values.email}\r\n                placeholder=\"Email\"\r\n                mode=\"email\"\r\n                errors={errors.email}\r\n              />\r\n              \r\n              <InputComponent\r\n                name=\"contactNumber\"\r\n                onChangeText={handleChange(\"contactNumber\")}\r\n                onBlur={handleBlur(\"contactNumber\")}\r\n                value={values.contactNumber}\r\n                placeholder=\"Phone number\"\r\n                mode=\"numeric\"\r\n                errors={errors.contactNumber}\r\n              />\r\n              <InputComponent\r\n                name=\"password\"\r\n                errors={errors.password}\r\n                placeholder=\"Password\"\r\n                mode=\"text\"\r\n                secure={true}\r\n                onChangeText={handleChange(\"password\")}\r\n                onBlur={handleBlur(\"password\")}\r\n                value={values.password}\r\n              />\r\n              <InputComponent\r\n                name=\"confirmPassword\"\r\n                errors={errors.confirmPassword}\r\n                placeholder=\"Confirm Password\"\r\n                mode=\"text\"\r\n                secure={true}\r\n                onChangeText={handleChange(\"confirmPassword\")}\r\n                onBlur={handleBlur(\"confirmPassword\")}\r\n                value={values.confirmPassword}\r\n              />\r\n              <RoundedButton\r\n                btnColor={Colors.black}\r\n                title=\"Sign Up\"\r\n                isDisabled={isValid}\r\n                onPressedFun={handleSubmit}\r\n              />\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: Colors.gray,\r\n  },\r\n  svgtext: {\r\n    gap: 31,\r\n    alignItems: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: \"700\",\r\n  },\r\n  fields: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    gap: 20,\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}