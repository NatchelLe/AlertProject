{"ast":null,"code":"import * as yup from \"yup\";\nexport var loginValidationSchema = yup.object().shape({\n  username: yup.string().email(\"Please enter valid email\").required(\"Email Address is Required\"),\n  password: yup.string().min(8, function (_ref) {\n    var min = _ref.min;\n    return `Password must be at least ${min} characters`;\n  }).required(\"Password is required\")\n});\nexport var RegisterValidationSchema = yup.object().shape({\n  username: yup.string().min(4, function (_ref2) {\n    var min = _ref2.min;\n    return `Username must be at least ${min} characters`;\n  }).required(\"Username is Required\"),\n  email: yup.string().email(\"Please enter valid email\").required(\"Email Address is Required\"),\n  contactNumber: yup.string().matches(/^[0-9]+$/, 'Phone number must only contain digits').min(10, 'Phone number must be at least 10 characters').required('Phone number is required'),\n  password: yup.string().min(8, function (_ref3) {\n    var min = _ref3.min;\n    return `Password must be at least ${min} characters`;\n  }).required(\"Password is required\"),\n  confirmPassword: yup.string().required(\"Please re-type your password\").oneOf([yup.ref(\"password\")], \"Passwords does not match\")\n});","map":{"version":3,"names":["yup","loginValidationSchema","object","shape","username","string","email","required","password","min","_ref","RegisterValidationSchema","_ref2","contactNumber","matches","_ref3","confirmPassword","oneOf","ref"],"sources":["D:/Q-phela-UI-Nathii/Q-phela-UI-Nathii/src/assets/constants/Schemas.js"],"sourcesContent":["import * as yup from \"yup\";\n\nexport const loginValidationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .email(\"Please enter valid email\")\n    .required(\"Email Address is Required\"),\n  password: yup\n    .string()\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\n    .required(\"Password is required\"),\n});\n\n\nexport const RegisterValidationSchema = yup.object().shape({\n  username: yup.string()\n  .min(4, ({ min }) => `Username must be at least ${min} characters`)\n  .required(\"Username is Required\"),\n  email: yup\n    .string()\n    .email(\"Please enter valid email\")\n    .required(\"Email Address is Required\"),\n  contactNumber: yup.string()\n    .matches(/^[0-9]+$/, 'Phone number must only contain digits')\n    .min(10, 'Phone number must be at least 10 characters')\n    .required('Phone number is required'),\n  password: yup\n    .string()\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\n    .required(\"Password is required\"),\n  confirmPassword: yup\n    .string()\n    .required(\"Please re-type your password\")\n    // use oneOf to match one of the values inside the array.\n    // use \"ref\" to get the value of passwrod.\n    .oneOf([yup.ref(\"password\")], \"Passwords does not match\")\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,IAAMC,qBAAqB,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACtDC,QAAQ,EAAEJ,GAAG,CACVK,MAAM,CAAC,CAAC,CACRC,KAAK,CAAC,0BAA0B,CAAC,CACjCC,QAAQ,CAAC,2BAA2B,CAAC;EACxCC,QAAQ,EAAER,GAAG,CACVK,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,EAAE,UAAAC,IAAA;IAAA,IAAGD,GAAG,GAAAC,IAAA,CAAHD,GAAG;IAAA,OAAQ,6BAA4BA,GAAI,aAAY;EAAA,EAAC,CAClEF,QAAQ,CAAC,sBAAsB;AACpC,CAAC,CAAC;AAGF,OAAO,IAAMI,wBAAwB,GAAGX,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACzDC,QAAQ,EAAEJ,GAAG,CAACK,MAAM,CAAC,CAAC,CACrBI,GAAG,CAAC,CAAC,EAAE,UAAAG,KAAA;IAAA,IAAGH,GAAG,GAAAG,KAAA,CAAHH,GAAG;IAAA,OAAQ,6BAA4BA,GAAI,aAAY;EAAA,EAAC,CAClEF,QAAQ,CAAC,sBAAsB,CAAC;EACjCD,KAAK,EAAEN,GAAG,CACPK,MAAM,CAAC,CAAC,CACRC,KAAK,CAAC,0BAA0B,CAAC,CACjCC,QAAQ,CAAC,2BAA2B,CAAC;EACxCM,aAAa,EAAEb,GAAG,CAACK,MAAM,CAAC,CAAC,CACxBS,OAAO,CAAC,UAAU,EAAE,uCAAuC,CAAC,CAC5DL,GAAG,CAAC,EAAE,EAAE,6CAA6C,CAAC,CACtDF,QAAQ,CAAC,0BAA0B,CAAC;EACvCC,QAAQ,EAAER,GAAG,CACVK,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,EAAE,UAAAM,KAAA;IAAA,IAAGN,GAAG,GAAAM,KAAA,CAAHN,GAAG;IAAA,OAAQ,6BAA4BA,GAAI,aAAY;EAAA,EAAC,CAClEF,QAAQ,CAAC,sBAAsB,CAAC;EACnCS,eAAe,EAAEhB,GAAG,CACjBK,MAAM,CAAC,CAAC,CACRE,QAAQ,CAAC,8BAA8B,CAAC,CAGxCU,KAAK,CAAC,CAACjB,GAAG,CAACkB,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,0BAA0B;AAC5D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}