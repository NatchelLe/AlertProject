{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Modal from 'react-native-modal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useState = useState('John Doe'),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState('johndoe'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState('johndoe@example.com'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isEditing = _useState8[0],\n    setIsEditing = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isModalVisible = _useState10[0],\n    setIsModalVisible = _useState10[1];\n  var animatedValue = new Animated.Value(0);\n  var animateText = function animateText() {\n    Animated.sequence([Animated.timing(animatedValue, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: false\n    }), Animated.timing(animatedValue, {\n      toValue: 0,\n      duration: 1000,\n      useNativeDriver: false\n    })]).start();\n  };\n  var saveChanges = function saveChanges() {\n    setIsEditing(false);\n    setIsModalVisible(true);\n    animateText();\n  };\n  var closeModal = function closeModal() {\n    setIsModalVisible(false);\n  };\n  var data = [{\n    label: 'Name',\n    value: name\n  }, {\n    label: 'Username',\n    value: username\n  }, {\n    label: 'Email',\n    value: email\n  }];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.profileImage\n    }), _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return item.label;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          style: styles.infoRow,\n          children: [_jsxs(Text, {\n            style: styles.label,\n            children: [item.label, \":\"]\n          }), isEditing ? _jsx(TextInput, {\n            style: styles.editInput,\n            value: item.value,\n            onChangeText: function onChangeText(text) {\n              if (item.label === 'Name') setName(text);\n              if (item.label === 'Username') setUsername(text);\n              if (item.label === 'Email') setEmail(text);\n            },\n            placeholder: `Enter ${item.label}`,\n            placeholderTextColor: \"grey\"\n          }) : _jsx(Animated.Text, {\n            style: [styles.value, {\n              fontSize: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [16, 20]\n              })\n            }],\n            children: item.value\n          })]\n        });\n      }\n    }), isEditing ? _jsx(TouchableOpacity, {\n      style: styles.editButton,\n      onPress: saveChanges,\n      children: _jsx(Text, {\n        style: styles.editButtonText,\n        children: \"Save Changes\"\n      })\n    }) : _jsx(TouchableOpacity, {\n      style: styles.editButton,\n      onPress: function onPress() {\n        return setIsEditing(true);\n      },\n      children: _jsx(Text, {\n        style: styles.editButtonText,\n        children: \"Edit Profile\"\n      })\n    }), _jsx(Modal, {\n      isVisible: isModalVisible,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalText,\n          children: \"Profile Updated\"\n        }), _jsx(TouchableOpacity, {\n          onPress: closeModal,\n          children: _jsx(Text, {\n            style: styles.closeModalText,\n            children: \"Close\"\n          })\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'lightgrey'\n  },\n  profileImage: {\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    marginBottom: 20\n  },\n  infoRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'lightgrey',\n    padding: 10,\n    borderRadius: 5\n  },\n  label: {\n    width: 100,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  value: {\n    flex: 1,\n    fontSize: 16,\n    color: 'gray'\n  },\n  editInput: {\n    flex: 1,\n    height: 40,\n    backgroundColor: 'white',\n    borderColor: 'grey',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingLeft: 10,\n    color: 'grey'\n  },\n  editButton: {\n    backgroundColor: 'black',\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 50\n  },\n  editButtonText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  modalText: {\n    fontSize: 20\n  },\n  closeModalText: {\n    color: 'blue',\n    marginTop: 10\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","TextInput","TouchableOpacity","StyleSheet","FlatList","Animated","Modal","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","username","setUsername","_useState5","_useState6","email","setEmail","_useState7","_useState8","isEditing","setIsEditing","_useState9","_useState10","isModalVisible","setIsModalVisible","animatedValue","Value","animateText","sequence","timing","toValue","duration","useNativeDriver","start","saveChanges","closeModal","data","label","value","style","styles","container","children","profileImage","keyExtractor","item","renderItem","_ref","infoRow","editInput","onChangeText","text","placeholder","placeholderTextColor","fontSize","interpolate","inputRange","outputRange","editButton","onPress","editButtonText","isVisible","modalContent","modalText","closeModalText","create","flex","alignItems","justifyContent","backgroundColor","width","height","borderRadius","marginBottom","flexDirection","borderWidth","borderColor","padding","fontWeight","color","paddingLeft","textAlign","marginTop"],"sources":["D:/My Documents/Q-phela-UI-Nathii (2)/Q-phela-UI-Nathii/Q-phela-UI-Nathii/src/screens/ProfileScreen.js"],"sourcesContent":["// ProfileScreen.js\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, Image, TextInput, TouchableOpacity, StyleSheet, FlatList, Animated } from 'react-native';\nimport Modal from 'react-native-modal';\n\nconst ProfileScreen = () => {\n  const [name, setName] = useState('John Doe');\n  const [username, setUsername] = useState('johndoe');\n  const [email, setEmail] = useState('johndoe@example.com');\n  const [isEditing, setIsEditing] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const animatedValue = new Animated.Value(0);\n\n  const animateText = () => {\n    Animated.sequence([\n      Animated.timing(animatedValue, {\n        toValue: 1,\n        duration: 1000, // Increase the size in 1 second\n        useNativeDriver: false,\n      }),\n      Animated.timing(animatedValue, {\n        toValue: 0,\n        duration: 1000, // Decrease the size in 1 second\n        useNativeDriver: false,\n      }),\n    ]).start();\n  };\n\n  const saveChanges = () => {\n    setIsEditing(false);\n    setIsModalVisible(true);\n    animateText(); // Start the animation when saving changes\n    // You can implement code here to save the edited details to your backend or storage.\n  };\n\n  const closeModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const data = [\n    { label: 'Name', value: name },\n    { label: 'Username', value: username },\n    { label: 'Email', value: email },\n  ];\n\n  return (\n    <View style={styles.container}>\n      <Image\n        //source={require('./profile.jpg')} // Your profile picture\n        style={styles.profileImage}\n      />\n      <FlatList\n        data={data}\n        keyExtractor={(item) => item.label}\n        renderItem={({ item }) => (\n          <View style={styles.infoRow}>\n            <Text style={styles.label}>{item.label}:</Text>\n            {isEditing ? (\n              <TextInput\n                style={styles.editInput}\n                value={item.value}\n                onChangeText={(text) => {\n                  if (item.label === 'Name') setName(text);\n                  if (item.label === 'Username') setUsername(text);\n                  if (item.label === 'Email') setEmail(text);\n                }}\n                placeholder={`Enter ${item.label}`}\n                placeholderTextColor=\"grey\"\n              />\n            ) : (\n              <Animated.Text style={[styles.value, { fontSize: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [16, 20], // Change the font size during the animation\n              }) }]}>{item.value}</Animated.Text>\n            )}\n          </View>\n        )}\n      />\n      {isEditing ? (\n        <TouchableOpacity style={styles.editButton} onPress={saveChanges}>\n          <Text style={styles.editButtonText}>Save Changes</Text>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity\n          style={styles.editButton}\n          onPress={() => setIsEditing(true)}\n        >\n          <Text style={styles.editButtonText}>Edit Profile</Text>\n        </TouchableOpacity>\n      )}\n      <Modal isVisible={isModalVisible}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalText}>Profile Updated</Text>\n          <TouchableOpacity onPress={closeModal}>\n            <Text style={styles.closeModalText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'lightgrey',\n  },\n  profileImage: {\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    marginBottom: 20,\n  },\n  infoRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'lightgrey',\n    padding: 10,\n    borderRadius: 5,\n  },\n  label: {\n    width: 100,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  value: {\n    flex: 1,\n    fontSize: 16,\n    color: 'gray',\n  },\n  editInput: {\n    flex: 1,\n    height: 40,\n    backgroundColor: 'white',\n    borderColor: 'grey',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingLeft: 10,\n    color: 'grey',\n  },\n  editButton: {\n    backgroundColor: 'black',\n    padding: 10,\n    borderRadius: 5,\n    marginBottom:50,\n  },\n  editButtonText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  modalText: {\n    fontSize: 20,\n  },\n  closeModalText: {\n    color: 'blue',\n    marginTop: 10,\n  },\n});\n\nexport default ProfileScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}