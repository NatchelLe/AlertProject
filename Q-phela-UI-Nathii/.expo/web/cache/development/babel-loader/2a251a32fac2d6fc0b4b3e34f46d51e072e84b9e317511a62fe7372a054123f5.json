{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from 'react-native-modal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useState = useState('John Doe'),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState('johndoe'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState('johndoe@example.com'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isEditing = _useState8[0],\n    setIsEditing = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isModalVisible = _useState10[0],\n    setIsModalVisible = _useState10[1];\n  var saveChanges = function saveChanges() {\n    setIsEditing(false);\n    setIsModalVisible(true);\n  };\n  var closeModal = function closeModal() {\n    setIsModalVisible(false);\n  };\n  var data = [{\n    label: 'Name',\n    value: name\n  }, {\n    label: 'Username',\n    value: username\n  }, {\n    label: 'Email',\n    value: email\n  }];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"./profile.jpg\"),\n      style: styles.profileImage\n    }), _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return item.label;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          style: styles.infoRow,\n          children: [_jsxs(Text, {\n            style: styles.label,\n            children: [item.label, \":\"]\n          }), isEditing ? _jsx(TextInput, {\n            style: styles.editInput,\n            value: item.value,\n            onChangeText: function onChangeText(text) {\n              if (item.label === 'Name') setName(text);\n              if (item.label === 'Username') setUsername(text);\n              if (item.label === 'Email') setEmail(text);\n            },\n            placeholder: `Enter ${item.label}`,\n            placeholderTextColor: \"grey\"\n          }) : _jsx(Text, {\n            style: styles.value,\n            children: item.value\n          })]\n        });\n      }\n    }), isEditing ? _jsx(TouchableOpacity, {\n      style: styles.editButton,\n      onPress: saveChanges,\n      children: _jsx(Text, {\n        style: styles.editButtonText,\n        children: \"Save Changes\"\n      })\n    }) : _jsx(TouchableOpacity, {\n      style: styles.editButton,\n      onPress: function onPress() {\n        return setIsEditing(true);\n      },\n      children: _jsx(Text, {\n        style: styles.editButtonText,\n        children: \"Edit Profile\"\n      })\n    }), _jsx(Modal, {\n      isVisible: isModalVisible,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalText,\n          children: \"Profile Updated\"\n        }), _jsx(TouchableOpacity, {\n          onPress: closeModal,\n          children: _jsx(Text, {\n            style: styles.closeModalText,\n            children: \"Close\"\n          })\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'lightgrey'\n  },\n  profileImage: {\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    marginBottom: 20\n  },\n  infoRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'lightgrey',\n    padding: 10,\n    borderRadius: 5\n  },\n  label: {\n    width: 100,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  value: {\n    flex: 1,\n    fontSize: 16,\n    color: 'gray'\n  },\n  editInput: {\n    flex: 1,\n    height: 40,\n    backgroundColor: 'white',\n    borderColor: 'grey',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingLeft: 10,\n    color: 'grey'\n  },\n  editButton: {\n    backgroundColor: 'black',\n    padding: 10,\n    borderRadius: 5\n  },\n  editButtonText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  modalText: {\n    fontSize: 20\n  },\n  closeModalText: {\n    color: 'blue',\n    marginTop: 10\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","View","Text","Image","TextInput","TouchableOpacity","StyleSheet","FlatList","Modal","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","username","setUsername","_useState5","_useState6","email","setEmail","_useState7","_useState8","isEditing","setIsEditing","_useState9","_useState10","isModalVisible","setIsModalVisible","saveChanges","closeModal","data","label","value","style","styles","container","children","source","require","profileImage","keyExtractor","item","renderItem","_ref","infoRow","editInput","onChangeText","text","placeholder","placeholderTextColor","editButton","onPress","editButtonText","isVisible","modalContent","modalText","closeModalText","create","flex","alignItems","justifyContent","backgroundColor","width","height","borderRadius","marginBottom","flexDirection","borderWidth","borderColor","padding","fontSize","fontWeight","color","paddingLeft","textAlign","marginTop"],"sources":["D:/Q-phela-UI/src/screens/ProfileScreen.js"],"sourcesContent":["// ProfileScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, Image, TextInput, TouchableOpacity, StyleSheet, FlatList } from 'react-native';\r\nimport Modal from 'react-native-modal';\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState('John Doe');\r\n  const [username, setUsername] = useState('johndoe');\r\n  const [email, setEmail] = useState('johndoe@example.com');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const saveChanges = () => {\r\n    setIsEditing(false);\r\n    setIsModalVisible(true);\r\n    // You can implement code here to save the edited details to your backend or storage.\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const data = [\r\n    { label: 'Name', value: name },\r\n    { label: 'Username', value: username },\r\n    { label: 'Email', value: email },\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        source={require('./profile.jpg')} // Your profile picture\r\n        style={styles.profileImage}\r\n      />\r\n      <FlatList\r\n        data={data}\r\n        keyExtractor={(item) => item.label}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.infoRow}>\r\n            <Text style={styles.label}>{item.label}:</Text>\r\n            {isEditing ? (\r\n              <TextInput\r\n                style={styles.editInput}\r\n                value={item.value}\r\n                onChangeText={(text) => {\r\n                  if (item.label === 'Name') setName(text);\r\n                  if (item.label === 'Username') setUsername(text);\r\n                  if (item.label === 'Email') setEmail(text);\r\n                }}\r\n                placeholder={`Enter ${item.label}`}\r\n                placeholderTextColor=\"grey\"\r\n              />\r\n            ) : (\r\n              <Text style={styles.value}>{item.value}</Text>\r\n            )}\r\n          </View>\r\n        )}\r\n      />\r\n      {isEditing ? (\r\n        <TouchableOpacity style={styles.editButton} onPress={saveChanges}>\r\n          <Text style={styles.editButtonText}>Save Changes</Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <TouchableOpacity\r\n          style={styles.editButton}\r\n          onPress={() => setIsEditing(true)}\r\n        >\r\n          <Text style={styles.editButtonText}>Edit Profile</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n      <Modal isVisible={isModalVisible}>\r\n        <View style={styles.modalContent}>\r\n          <Text style={styles.modalText}>Profile Updated</Text>\r\n          <TouchableOpacity onPress={closeModal}>\r\n            <Text style={styles.closeModalText}>Close</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'lightgrey',\r\n  },\r\n  profileImage: {\r\n    width: 150,\r\n    height: 150,\r\n    borderRadius: 75,\r\n    marginBottom: 20,\r\n  },\r\n  infoRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: 'lightgrey',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  label: {\r\n    width: 100,\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  value: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n    color: 'gray',\r\n  },\r\n  editInput: {\r\n    flex: 1,\r\n    height: 40,\r\n    backgroundColor: 'white',\r\n    borderColor: 'grey',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    paddingLeft: 10,\r\n    color: 'grey',\r\n  },\r\n  editButton: {\r\n    backgroundColor: 'black',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  editButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n  },\r\n  modalText: {\r\n    fontSize: 20,\r\n  },\r\n  closeModalText: {\r\n    color: 'blue',\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}