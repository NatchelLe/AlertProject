{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { RadioButton } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport HomeScreen from \"./HomeScreen\";\nimport Heading from \"../components/landing-screen/Heading\";\nimport { Colors } from \"../assets/Colors\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar incidentTypes = [{\n  label: 'Car jacking',\n  value: 'Car jacking'\n}, {\n  label: 'Robbery',\n  value: 'Robbery'\n}, {\n  label: 'Kidnapping',\n  value: 'Kidnapping'\n}, {\n  label: 'Other',\n  value: 'Other'\n}];\nvar IncidentReportForm = function IncidentReportForm() {\n  var _useState = useState({\n      location: '',\n      incidentType: '',\n      description: '',\n      customIncidentType: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    incident = _useState2[0],\n    setIncident = _useState2[1];\n  var handleChange = function handleChange(name, value) {\n    if (name === 'incidentType') {\n      setIncident(_objectSpread(_objectSpread({}, incident), {}, {\n        incidentType: value,\n        customIncidentType: ''\n      }));\n    } else if (name === 'customIncidentType') {\n      setIncident(_objectSpread(_objectSpread({}, incident), {}, {\n        customIncidentType: value\n      }));\n    } else {\n      setIncident(_objectSpread(_objectSpread({}, incident), {}, _defineProperty({}, name, value)));\n    }\n  };\n  var handleSubmit = function handleSubmit() {\n    var location = incident.location,\n      incidentType = incident.incidentType,\n      description = incident.description,\n      customIncidentType = incident.customIncidentType;\n  };\n  var handleIncidentTypeChange = function handleIncidentTypeChange(value) {\n    if (value === 'Other') {\n      handleChange('description', '');\n    }\n    handleChange('incidentType', value);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(_Fragment, {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Incident Reporting\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your location\",\n      value: incident.location,\n      onChangeText: function onChangeText(text) {\n        return handleChange('location', text);\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Incident Type:\"\n    }), incidentTypes.map(function (type) {\n      return _jsxs(View, {\n        style: styles.radioContainer,\n        children: [_jsx(RadioButton, {\n          value: type.value,\n          status: incident.incidentType === type.value ? 'checked' : 'unchecked',\n          onPress: function onPress() {\n            return handleIncidentTypeChange(type.value);\n          }\n        }), _jsx(Text, {\n          children: type.label\n        })]\n      }, type.value);\n    }), incident.incidentType === 'Other' && _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter custom incident type\",\n      value: incident.customIncidentType,\n      onChangeText: function onChangeText(text) {\n        return handleChange('customIncidentType', text);\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Incident Description:\"\n    }), _jsx(TextInput, {\n      style: styles.textArea,\n      multiline: true,\n      placeholder: \"Type your description\",\n      value: incident.description,\n      onChangeText: function onChangeText(text) {\n        return handleChange('description', text);\n      }\n    }), _jsx(Button, {\n      color: \"black\",\n      backgroundColor: \"black\",\n      title: \"Submit\",\n      onPress: handleSubmit,\n      s: true,\n      tyle: styles.button\n    }), _jsx(HomeScreen, {\n      style: styles.bar\n    })]\n  });\n};\nvar styles = {\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: Colors.gray\n  },\n  bar: {\n    marginBottom: 60\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: 'bold'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'lightgray',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: '#fff'\n  },\n  label: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  radioContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n    Color: 'black'\n  },\n  textArea: {\n    borderWidth: 1,\n    borderColor: 'lightgray',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: 'lightgray',\n    minHeight: 100\n  }\n};\nexport default IncidentReportForm;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","RadioButton","useNavigation","HomeScreen","Heading","Colors","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","incidentTypes","label","value","IncidentReportForm","_useState","location","incidentType","description","customIncidentType","_useState2","_slicedToArray","incident","setIncident","handleChange","name","_objectSpread","_defineProperty","handleSubmit","handleIncidentTypeChange","style","styles","container","children","title","input","placeholder","onChangeText","text","map","type","radioContainer","status","onPress","textArea","multiline","color","backgroundColor","s","tyle","button","bar","flex","padding","gray","marginBottom","fontSize","textAlign","fontWeight","borderWidth","borderColor","borderRadius","flexDirection","alignItems","Color","minHeight"],"sources":["D:/My Documents/Q-phela-UI-Nathii (3)/Q-phela-UI-Nathii (2)/Q-phela-UI-Nathii/Q-phela-UI-Nathii/src/screens/IncidentReportForm.js"],"sourcesContent":["//import { NOT_INITIALIZED_ERROR } from '@react-navigation/core/lib/typescript/src/createNavigationContainerRef';\nimport React, { useState } from 'react';\nimport { View, Text, TextInput, Button } from 'react-native';\nimport { RadioButton } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n// import Heading from '../components/landing-screen/Heading';\nimport HomeScreen from './HomeScreen';\nimport Heading from '../components/landing-screen/Heading';\nimport { Colors } from '../assets/Colors';\n//import { black } from 'react-native-paper/lib/typescript/styles/themes/v2/colors';\nconst incidentTypes = [\n  { label: 'Car jacking', value: 'Car jacking' },\n  { label: 'Robbery', value: 'Robbery' },\n  { label: 'Kidnapping', value: 'Kidnapping' },\n  { label: 'Other', value: 'Other' },\n];\nconst IncidentReportForm = () => {\n  const [incident, setIncident] = useState({\n    location: '',\n    incidentType: '',\n    description: '',\n    customIncidentType: '',\n  });\n  const handleChange = (name, value) => {\n    if (name === 'incidentType') {\n      setIncident({\n        ...incident,\n        incidentType: value,\n        customIncidentType: '', // Clear custom incident type when a predefined type is selected\n      });\n    } else if (name === 'customIncidentType') {\n      setIncident({\n        ...incident,\n        customIncidentType: value,\n      });\n    } else {\n      setIncident({\n        ...incident,\n        [name]: value,\n      });\n    }\n  };\n  const handleSubmit = () => {\n    const { location, incidentType, description, customIncidentType } = incident;\n    // Your axios request here\n    // Replace the axios request with the appropriate code for making a network request in React Native\n  };\n  const handleIncidentTypeChange = (value) => {\n    if (value === 'Other') {\n      handleChange('description', ''); // Clear description when 'Other' is selected\n    }\n    handleChange('incidentType', value);\n  };\n  return (\n    <View style={styles.container}>\n      \n      <>\n      </>\n      <Text style={styles.title}>Incident Reporting</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter your location\"\n        value={incident.location}\n        onChangeText={(text) => handleChange('location', text)}\n      />\n      <Text style={styles.label}>Incident Type:</Text>\n      {incidentTypes.map((type) => (\n        <View key={type.value} style={styles.radioContainer}>\n          <RadioButton\n            value={type.value}\n            status={incident.incidentType === type.value ? 'checked' : 'unchecked'}\n            onPress={() => handleIncidentTypeChange(type.value) }\n          />\n          <Text>{type.label}</Text>\n        </View>\n      ))}\n      {incident.incidentType === 'Other' && (\n        <TextInput\n          style={styles.input}\n          placeholder=\"Enter custom incident type\"\n          value={incident.customIncidentType}\n          onChangeText={(text) => handleChange('customIncidentType', text)}\n        />\n      )}\n      <Text style={styles.label}>Incident Description:</Text>\n      <TextInput\n        style={styles.textArea}\n        multiline\n        placeholder=\"Type your description\"\n        value={incident.description}\n        onChangeText={(text) => handleChange('description', text)}\n      />\n      <Button\n  color=\"black\"\n  backgroundColor=\"black\"\n  title=\"Submit\"\n  onPress={handleSubmit} s\n  tyle={styles.button}\n  />\n  <HomeScreen  style={styles.bar}/>\n    </View>\n  );\n};\nconst styles = {\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: Colors.gray,\n  },\n\n\n  bar:{\n      marginBottom:60\n\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: 'bold',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'lightgray',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: '#fff',\n  },\n  label: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  radioContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n    Color:'black',\n  },\n  textArea: {\n    borderWidth: 1,\n    borderColor: 'lightgray',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: 'lightgray',\n    minHeight: 100,\n  },\n};\nexport default IncidentReportForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}