{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport Heading from \"../components/landing-screen/Heading\";\nimport axios from 'axios';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar incidentTypes = [{\n  label: 'Car jacking',\n  value: 'Car jacking'\n}, {\n  label: 'Robbery',\n  value: 'Robbery'\n}, {\n  label: 'Kidnapping',\n  value: 'Kidnapping'\n}];\nvar IncidentReportForm = function IncidentReportForm() {\n  var navigation = useNavigation();\n  var _useState = useState({\n      location: '',\n      incidentType: '',\n      description: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    incident = _useState2[0],\n    setIncident = _useState2[1];\n  var handleChange = function handleChange(key, value) {\n    setIncident(_objectSpread(_objectSpread({}, incident), {}, _defineProperty({}, key, value)));\n  };\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    incidentType = _useState6[0],\n    setIncidentType = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* (e) {\n      var citizen_id = localStorage.getItem(\"citizen_id\");\n      var location = localStorage.getItem(\"name\");\n      var report = {\n        rep_description: description,\n        incident_type: incidentType,\n        citizen_id: Number(citizen_id)\n      };\n      console.log(report);\n      e.preventDefault();\n      try {\n        var response = yield axios.post(`http://localhost:3003/reports`, report);\n        if (response.status === 201) {\n          console.log('Report created successfully');\n          setIncident({\n            citizen_id: '',\n            incidentType: '',\n            description: ''\n          });\n          navigation.navigate('Login');\n        }\n      } catch (error) {\n        console.error('Error creating report:', error);\n      }\n    });\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(\"div\", {\n    className: \"container\",\n    children: [_jsx(\"style\", {\n      children: `\n          .container {\n            max-width: 400px;\n            margin: 0 auto;\n            padding: 20px;\n            font-family: 'Poppins', sans-serif;\n          }\n\n          h2 {\n            text-align: center;\n          }\n\n          label {\n            font-weight: bold;\n            display: block;\n            margin-bottom: 5px;\n          }\n\n          input, textarea {\n            width: 100%;\n            padding: 8px;\n            border: 1px solid #ccc;\n            border-radius: 6px;\n            font-family: 'Poppins', sans-serif;\n            margin-bottom: 10px;\n          }\n\n          .radio-container {\n            display: flex;\n            flex-direction: column;\n          }\n\n          .radio-label {\n            display: flex;\n            align-items: center;\n            margin-bottom: 5px;\n          }\n\n          .radio-input {\n            margin-right: 10px;\n          }\n\n          .btn-container {\n            display: flex;\n            justify-content: flex-end;\n          }\n\n          .btn {\n            width: 92px;\n            height: 24px;\n            background-color: black;\n            color: white;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            font-family: 'Poppins', sans-serif;\n          }\n\n          .btn:hover {\n            background-color: #000000;\n          }\n\n          .enter-location {\n            height: 29px;\n          }\n\n          .incident-description {\n            height: 127px;\n          }\n\n          .incident-description-label {\n            text-align: center;\n          }\n        `\n    }), _jsx(Heading, {}), _jsxs(\"div\", {\n      className: \"container\",\n      children: [_jsx(\"h2\", {\n        children: \"Incident Reporting\"\n      }), _jsxs(\"form\", {\n        onSubmit: handleSubmit,\n        children: [_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            children: \"Enter Location:\"\n          }), _jsx(\"input\", {\n            type: \"text\",\n            name: \"location\",\n            placeholder: \"Enter your location\",\n            value: location,\n            mode: \"text\",\n            onChange: handleChange,\n            secure: true,\n            className: \"enter-location\"\n          })]\n        }), _jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            children: \"Incident Type:\"\n          }), _jsx(\"div\", {\n            className: \"radio-container\",\n            children: incidentTypes.map(function (type) {\n              return _jsxs(\"label\", {\n                className: \"radio-label\",\n                children: [_jsx(\"input\", {\n                  type: \"radio\",\n                  name: \"incidentType\",\n                  mode: \"text\",\n                  value: type.value,\n                  onChange: handleChange,\n                  onChangeText: function onChangeText(e) {\n                    return setIncidentType(e);\n                  },\n                  checked: incidentType === type.value,\n                  className: \"radio-input\",\n                  secure: true\n                }), type.label]\n              }, type.value);\n            })\n          })]\n        }), _jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            className: \"incident-description-label\",\n            children: \"Incident Description:\"\n          }), _jsx(\"textarea\", {\n            name: \"description\",\n            mode: \"text\",\n            secure: true,\n            placeholder: \"Type your description\",\n            value: description,\n            onChange: handleChange,\n            onChangeText: function onChangeText(e) {\n              return setDescription(e);\n            },\n            className: \"incident-description\"\n          })]\n        }), _jsx(\"div\", {\n          className: \"btn-container\",\n          children: _jsx(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            onPressedFun: handleSubmit,\n            children: \"Submit\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default IncidentReportForm;","map":{"version":3,"names":["React","useState","Heading","axios","useNavigation","jsx","_jsx","jsxs","_jsxs","incidentTypes","label","value","IncidentReportForm","navigation","_useState","location","incidentType","description","_useState2","_slicedToArray","incident","setIncident","handleChange","key","_objectSpread","_defineProperty","_useState3","_useState4","setDescription","_useState5","_useState6","setIncidentType","_useState7","_useState8","error","setError","handleSubmit","_ref","_asyncToGenerator","e","citizen_id","localStorage","getItem","report","rep_description","incident_type","Number","console","log","preventDefault","response","post","status","navigate","_x","apply","arguments","className","children","onSubmit","type","name","placeholder","mode","onChange","secure","map","onChangeText","checked","onPressedFun"],"sources":["D:/My Documents/Q-phela-UI/src/screens/IncidentReportForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Heading from \"../components/landing-screen/Heading\";\r\nimport axios from 'axios';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n//const API_BASE_URL = 'http://localhost:3003'; // Update with your server's URL\r\n\r\nconst incidentTypes = [\r\n  { label: 'Car jacking', value: 'Car jacking' },\r\n  { label: 'Robbery', value: 'Robbery' },\r\n  { label: 'Kidnapping', value: 'Kidnapping' },\r\n  // Add more incident types as needed\r\n];\r\n\r\nconst IncidentReportForm = () => {\r\n  const navigation = useNavigation(); \r\n  const [incident, setIncident] = useState({\r\n    location: '',\r\n    incidentType: '',\r\n    description: '',\r\n  });\r\n\r\n  const handleChange = (key, value) => {\r\n    //const { key, value } = e.target;\r\n    setIncident({\r\n      ...incident,\r\n      [key]: value,\r\n    });\r\n  };\r\n  const [description, setDescription]=useState('')\r\n  const [ incidentType, setIncidentType]=useState('')\r\n  const [error, setError] = useState('');\r\n \r\n  const handleSubmit = async (e) => {\r\n    var citizen_id=localStorage.getItem(\"citizen_id\")\r\n    var location=localStorage.getItem(\"name\")\r\n    \r\n    var report={\r\n      rep_description:description,\r\n      incident_type:incidentType, \r\n      citizen_id:Number(citizen_id)\r\n    \r\n    }\r\n\r\n    console.log(report)\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:3003/reports` /*{\r\n        location: localStorage.getItem(\"location_id\"),\r\n        incidentType: incidentType,\r\n        description:description,\r\n        citizen_id: localStorage.getItem(\"citizen_id\"), // Replace with the actual citizen ID\r\n      }*/ , report);\r\n\r\n      if (response.status === 201) {\r\n        console.log('Report created successfully');\r\n        setIncident({\r\n          citizen_id: '',\r\n          incidentType: '',\r\n          description: '',\r\n        });\r\n        navigation.navigate('Login');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating report:', error);\r\n    }\r\n\r\n   \r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <style>\r\n        {`\r\n          .container {\r\n            max-width: 400px;\r\n            margin: 0 auto;\r\n            padding: 20px;\r\n            font-family: 'Poppins', sans-serif;\r\n          }\r\n\r\n          h2 {\r\n            text-align: center;\r\n          }\r\n\r\n          label {\r\n            font-weight: bold;\r\n            display: block;\r\n            margin-bottom: 5px;\r\n          }\r\n\r\n          input, textarea {\r\n            width: 100%;\r\n            padding: 8px;\r\n            border: 1px solid #ccc;\r\n            border-radius: 6px;\r\n            font-family: 'Poppins', sans-serif;\r\n            margin-bottom: 10px;\r\n          }\r\n\r\n          .radio-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n          }\r\n\r\n          .radio-label {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-bottom: 5px;\r\n          }\r\n\r\n          .radio-input {\r\n            margin-right: 10px;\r\n          }\r\n\r\n          .btn-container {\r\n            display: flex;\r\n            justify-content: flex-end;\r\n          }\r\n\r\n          .btn {\r\n            width: 92px;\r\n            height: 24px;\r\n            background-color: black;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 6px;\r\n            cursor: pointer;\r\n            font-family: 'Poppins', sans-serif;\r\n          }\r\n\r\n          .btn:hover {\r\n            background-color: #000000;\r\n          }\r\n\r\n          .enter-location {\r\n            height: 29px;\r\n          }\r\n\r\n          .incident-description {\r\n            height: 127px;\r\n          }\r\n\r\n          .incident-description-label {\r\n            text-align: center;\r\n          }\r\n        `}\r\n      </style>\r\n      <Heading />\r\n      <div className=\"container\">\r\n        <h2>Incident Reporting</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Enter Location:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              placeholder=\"Enter your location\"\r\n              value={location}\r\n              mode=\"text\"\r\n              onChange={handleChange}\r\n              secure={true}\r\n              className=\"enter-location\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Incident Type:</label>\r\n            <div className=\"radio-container\">\r\n              {incidentTypes.map((type) => (\r\n                <label key={type.value} className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"incidentType\"\r\n                    mode=\"text\"\r\n                    value={type.value}\r\n                    onChange={handleChange}\r\n                    onChangeText={(e)=> setIncidentType(e)}\r\n                    checked={incidentType === type.value}\r\n                    className=\"radio-input\"\r\n                    secure={true}\r\n                  />\r\n                  {type.label}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"incident-description-label\">Incident Description:</label>\r\n            <textarea\r\n              name=\"description\"\r\n              mode=\"text\"\r\n              secure={true}\r\n              placeholder=\"Type your description\"\r\n              value={description}\r\n              onChange={handleChange}\r\n              onChangeText={(e)=> setDescription(e)}\r\n              className=\"incident-description\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" className=\"btn\" onPressedFun={handleSubmit}>\r\n              Submit\r\n              \r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncidentReportForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}